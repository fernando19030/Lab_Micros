

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 22 21:31:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  0236                     __pidataBANK0:
   215                           
   216                           ;initializer for _tabla
   217  0236  343F               	retlw	63
   218  0237  3406               	retlw	6
   219  0238  345B               	retlw	91
   220  0239  344F               	retlw	79
   221  023A  3466               	retlw	102
   222  023B  346D               	retlw	109
   223  023C  347D               	retlw	125
   224  023D  3407               	retlw	7
   225  023E  347F               	retlw	127
   226  023F  3467               	retlw	103
   227  0006                     _PORTB	set	6
   228  0005                     _PORTA	set	5
   229  001E                     _ADRESH	set	30
   230  0007                     _PORTC	set	7
   231  001F                     _ADCON0bits	set	31
   232  000C                     _PIR1bits	set	12
   233  0008                     _PORTD	set	8
   234  0001                     _TMR0	set	1
   235  000B                     _INTCONbits	set	11
   236  0006                     _PORTBbits	set	6
   237  005A                     _T0IF	set	90
   238  009F                     _ADCON1bits	set	159
   239  0081                     _OPTION_REGbits	set	129
   240  008C                     _PIE1bits	set	140
   241  008F                     _OSCCONbits	set	143
   242  0088                     _TRISD	set	136
   243  0087                     _TRISC	set	135
   244  0086                     _TRISB	set	134
   245  0085                     _TRISA	set	133
   246  0189                     _ANSELH	set	393
   247  0188                     _ANSEL	set	392
   248                           
   249                           	psect	cinit
   250  0011                     start_initialization:	
   251                           ; #config settings
   252                           
   253  0011                     __initialization:
   254                           
   255                           ; Initialize objects allocated to BANK0
   256  0011  1383               	bcf	3,7	;select IRP bank0
   257  0012  302A               	movlw	low (__pdataBANK0+10)
   258  0013  00FD               	movwf	btemp+-1
   259  0014  3002               	movlw	high __pidataBANK0
   260  0015  00FE               	movwf	btemp
   261  0016  3036               	movlw	low __pidataBANK0
   262  0017  00FF               	movwf	btemp+1
   263  0018  3020               	movlw	low __pdataBANK0
   264  0019  0084               	movwf	4
   265  001A  120A  118A  2227  120A  118A  	fcall	init_ram0
   266                           
   267                           ; Clear objects allocated to BANK0
   268  001F  01B4               	clrf	__pbssBANK0& (0+127)
   269  0020  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   270  0021  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   271  0022  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   272  0023  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   273  0024  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   274  0025  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   275  0026  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   276                           
   277                           ; Clear objects allocated to COMMON
   278  0027  01F5               	clrf	__pbssCOMMON& (0+127)
   279  0028  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   280  0029  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   281  002A  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   282  002B                     end_of_initialization:	
   283                           ;End of C runtime variable initialization code
   284                           
   285  002B                     __end_of__initialization:
   286  002B  0183               	clrf	3
   287  002C  120A  118A  29F2   	ljmp	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMMON
   290  0075                     __pbssCOMMON:
   291  0075                     _variable:
   292  0075                     	ds	2
   293  0077                     _flags:
   294  0077                     	ds	2
   295                           
   296                           	psect	bssBANK0
   297  0034                     __pbssBANK0:
   298  0034                     _residuo:
   299  0034                     	ds	2
   300  0036                     _centena:
   301  0036                     	ds	2
   302  0038                     _decena:
   303  0038                     	ds	2
   304  003A                     _unidad:
   305  003A                     	ds	2
   306                           
   307                           	psect	dataBANK0
   308  0020                     __pdataBANK0:
   309  0020                     _tabla:
   310  0020                     	ds	10
   311                           
   312                           	psect	inittext
   313  0223                     init_fetch0:	
   314                           ;	Called with low address in FSR and high address in W
   315                           
   316  0223  087E               	movf	btemp,w
   317  0224  008A               	movwf	10
   318  0225  087F               	movf	btemp+1,w
   319  0226  0082               	movwf	2
   320  0227                     init_ram0:	
   321                           ;Called with:
   322                           ;	high address of idata address in btemp 
   323                           ;	low address of idata address in btemp+1 
   324                           ;	low address of data in FSR
   325                           ;	high address + 1 of data in btemp-1
   326                           
   327  0227  120A  118A  2223  120A  118A  	fcall	init_fetch0
   328  022C  0080               	movwf	0
   329  022D  0A84               	incf	4,f
   330  022E  0804               	movf	4,w
   331  022F  067D               	xorwf	btemp+-1,w
   332  0230  1903               	btfsc	3,2
   333  0231  3400               	retlw	0
   334  0232  0AFF               	incf	btemp+1,f
   335  0233  1903               	btfsc	3,2
   336  0234  0AFE               	incf	btemp,f
   337  0235  2A27               	goto	init_ram0
   338                           
   339                           	psect	cstackCOMMON
   340  0070                     __pcstackCOMMON:
   341  0070                     ?_setup:
   342  0070                     ?_isr:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ??_isr:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_main:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_decimal:	
   352                           ; 1 bytes @ 0x0
   353                           
   354                           
   355                           ; 2 bytes @ 0x0
   356  0070                     	ds	5
   357  0075                     ??_decimal:
   358                           
   359                           	psect	cstackBANK0
   360  002A                     __pcstackBANK0:	
   361                           ; 1 bytes @ 0x5
   362                           
   363  002A                     ??_setup:
   364  002A                     ?___awdiv:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  002A                     ?___awmod:	
   368                           ; 2 bytes @ 0x0
   369                           
   370  002A                     ___awdiv@divisor:	
   371                           ; 2 bytes @ 0x0
   372                           
   373  002A                     ___awmod@divisor:	
   374                           ; 2 bytes @ 0x0
   375                           
   376                           
   377                           ; 2 bytes @ 0x0
   378  002A                     	ds	2
   379  002C                     ___awdiv@dividend:
   380  002C                     ___awmod@dividend:	
   381                           ; 2 bytes @ 0x2
   382                           
   383                           
   384                           ; 2 bytes @ 0x2
   385  002C                     	ds	2
   386  002E                     ??___awdiv:
   387  002E                     ??___awmod:	
   388                           ; 1 bytes @ 0x4
   389                           
   390                           
   391                           ; 1 bytes @ 0x4
   392  002E                     	ds	1
   393  002F                     ___awdiv@counter:
   394  002F                     ___awmod@counter:	
   395                           ; 1 bytes @ 0x5
   396                           
   397                           
   398                           ; 1 bytes @ 0x5
   399  002F                     	ds	1
   400  0030                     ___awdiv@sign:
   401  0030                     ___awmod@sign:	
   402                           ; 1 bytes @ 0x6
   403                           
   404                           
   405                           ; 1 bytes @ 0x6
   406  0030                     	ds	1
   407  0031                     ___awdiv@quotient:
   408                           
   409                           ; 2 bytes @ 0x7
   410  0031                     	ds	2
   411  0033                     ??_main:
   412                           
   413                           ; 1 bytes @ 0x9
   414  0033                     	ds	1
   415                           
   416                           	psect	maintext
   417  01F2                     __pmaintext:	
   418 ;;
   419 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   420 ;;
   421 ;; *************** function _main *****************
   422 ;; Defined at:
   423 ;;		line 121 in file "Lab08.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0, pclath, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : B00/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0
   439 ;;      Temps:          0       1       0       0       0
   440 ;;      Totals:         0       1       0       0       0
   441 ;;Total ram usage:        1 bytes
   442 ;; Hardware stack levels required when called:    3
   443 ;; This function calls:
   444 ;;		_decimal
   445 ;;		_setup
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           
   452                           ;psect for function _main
   453  01F2                     _main:
   454  01F2                     l1161:	
   455                           ;incstack = 0
   456                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   457                           
   458                           
   459                           ;Lab08.c: 122:     setup();
   460  01F2  120A  118A  21A9  120A  118A  	fcall	_setup
   461  01F7                     l1163:
   462                           
   463                           ;Lab08.c: 123:     ADCON0bits.GO = 1;
   464  01F7  1283               	bcf	3,5	;RP0=0, select bank0
   465  01F8  1303               	bcf	3,6	;RP1=0, select bank0
   466  01F9  149F               	bsf	31,1	;volatile
   467  01FA                     l81:	
   468                           ;Lab08.c: 130:     while (1)
   469                           
   470                           
   471                           ;Lab08.c: 131:     {;Lab08.c: 132:         decimal();
   472  01FA  120A  118A  215A  120A  118A  	fcall	_decimal
   473  01FF                     l1165:
   474                           
   475                           ;Lab08.c: 134:         if (ADCON0bits.GO == 0){
   476  01FF  1283               	bcf	3,5	;RP0=0, select bank0
   477  0200  1303               	bcf	3,6	;RP1=0, select bank0
   478  0201  189F               	btfsc	31,1	;volatile
   479  0202  2A04               	goto	u741
   480  0203  2A05               	goto	u740
   481  0204                     u741:
   482  0204  29FA               	goto	l81
   483  0205                     u740:
   484  0205                     l1167:
   485                           
   486                           ;Lab08.c: 135:             if (ADCON0bits.CHS == 0) {
   487  0205  0C1F               	rrf	31,w	;volatile
   488  0206  00B3               	movwf	??_main
   489  0207  0C33               	rrf	??_main,w
   490  0208  390F               	andlw	15
   491  0209  3A00               	xorlw	0
   492  020A  1D03               	skipz
   493  020B  2A0D               	goto	u751
   494  020C  2A0E               	goto	u750
   495  020D                     u751:
   496  020D  2A13               	goto	l1171
   497  020E                     u750:
   498  020E                     l1169:
   499                           
   500                           ;Lab08.c: 136:                 ADCON0bits.CHS = 1;
   501  020E  081F               	movf	31,w	;volatile
   502  020F  39C3               	andlw	-61
   503  0210  3804               	iorlw	4
   504  0211  009F               	movwf	31	;volatile
   505                           
   506                           ;Lab08.c: 137:             }
   507  0212  2A15               	goto	l1173
   508  0213                     l1171:
   509                           
   510                           ;Lab08.c: 139:                 ADCON0bits.CHS = 0;
   511  0213  30C3               	movlw	-61
   512  0214  059F               	andwf	31,f	;volatile
   513  0215                     l1173:
   514                           
   515                           ;Lab08.c: 142:             _delay((unsigned long)((200)*(8000000/4000000.0)));
   516  0215  3084               	movlw	132
   517  0216  1283               	bcf	3,5	;RP0=0, select bank0
   518  0217  1303               	bcf	3,6	;RP1=0, select bank0
   519  0218  00B3               	movwf	??_main
   520  0219                     u767:
   521  0219  0BB3               	decfsz	??_main,f
   522  021A  2A19               	goto	u767
   523  021B  0000               	nop
   524  021C                     l1175:
   525                           
   526                           ;Lab08.c: 143:             ADCON0bits.GO = 1;
   527  021C  1283               	bcf	3,5	;RP0=0, select bank0
   528  021D  1303               	bcf	3,6	;RP1=0, select bank0
   529  021E  149F               	bsf	31,1	;volatile
   530  021F  29FA               	goto	l81
   531  0220  120A  118A  280E   	ljmp	start
   532  0223                     __end_of_main:
   533                           
   534                           	psect	text1
   535  01A9                     __ptext1:	
   536 ;; *************** function _setup *****************
   537 ;; Defined at:
   538 ;;		line 154 in file "Lab08.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, status,2, status,0
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   552 ;;      Params:         0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0
   554 ;;      Temps:          0       1       0       0       0
   555 ;;      Totals:         0       1       0       0       0
   556 ;;Total ram usage:        1 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; Hardware stack levels required when called:    1
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           
   567                           ;psect for function _setup
   568  01A9                     _setup:
   569  01A9                     l1103:	
   570                           ;incstack = 0
   571                           ; Regs used in _setup: [wreg+status,2+status,0]
   572                           
   573                           
   574                           ;Lab08.c: 156:     ANSEL = 0X03;
   575  01A9  3003               	movlw	3
   576  01AA  1683               	bsf	3,5	;RP0=1, select bank3
   577  01AB  1703               	bsf	3,6	;RP1=1, select bank3
   578  01AC  0088               	movwf	8	;volatile
   579  01AD                     l1105:
   580                           
   581                           ;Lab08.c: 157:     ANSELH = 0X00;
   582  01AD  0189               	clrf	9	;volatile
   583  01AE                     l1107:
   584                           
   585                           ;Lab08.c: 159:     TRISA = 0X03;
   586  01AE  3003               	movlw	3
   587  01AF  1683               	bsf	3,5	;RP0=1, select bank1
   588  01B0  1303               	bcf	3,6	;RP1=0, select bank1
   589  01B1  0085               	movwf	5	;volatile
   590                           
   591                           ;Lab08.c: 160:     TRISB = 0X00;
   592  01B2  0186               	clrf	6	;volatile
   593                           
   594                           ;Lab08.c: 161:     TRISC = 0X00;
   595  01B3  0187               	clrf	7	;volatile
   596                           
   597                           ;Lab08.c: 162:     TRISD = 0X00;
   598  01B4  0188               	clrf	8	;volatile
   599                           
   600                           ;Lab08.c: 164:     PORTA = 0X00;
   601  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   602  01B6  1303               	bcf	3,6	;RP1=0, select bank0
   603  01B7  0185               	clrf	5	;volatile
   604                           
   605                           ;Lab08.c: 165:     PORTB = 0X00;
   606  01B8  0186               	clrf	6	;volatile
   607                           
   608                           ;Lab08.c: 166:     PORTC = 0X00;
   609  01B9  0187               	clrf	7	;volatile
   610                           
   611                           ;Lab08.c: 167:     PORTD = 0X00;
   612  01BA  0188               	clrf	8	;volatile
   613  01BB                     l1109:
   614                           
   615                           ;Lab08.c: 170:     OSCCONbits.IRCF2 = 1;
   616  01BB  1683               	bsf	3,5	;RP0=1, select bank1
   617  01BC  1303               	bcf	3,6	;RP1=0, select bank1
   618  01BD  170F               	bsf	15,6	;volatile
   619  01BE                     l1111:
   620                           
   621                           ;Lab08.c: 171:     OSCCONbits.IRCF1 = 1;
   622  01BE  168F               	bsf	15,5	;volatile
   623  01BF                     l1113:
   624                           
   625                           ;Lab08.c: 172:     OSCCONbits.IRCF0 = 1;
   626  01BF  160F               	bsf	15,4	;volatile
   627  01C0                     l1115:
   628                           
   629                           ;Lab08.c: 173:     OSCCONbits.SCS = 1;
   630  01C0  140F               	bsf	15,0	;volatile
   631  01C1                     l1117:
   632                           
   633                           ;Lab08.c: 176:     INTCONbits.GIE = 1;
   634  01C1  178B               	bsf	11,7	;volatile
   635  01C2                     l1119:
   636                           
   637                           ;Lab08.c: 177:     INTCONbits.PEIE = 1;
   638  01C2  170B               	bsf	11,6	;volatile
   639  01C3                     l1121:
   640                           
   641                           ;Lab08.c: 178:     INTCONbits.T0IE = 1;
   642  01C3  168B               	bsf	11,5	;volatile
   643  01C4                     l1123:
   644                           
   645                           ;Lab08.c: 179:     PIE1bits.ADIE = 1;
   646  01C4  170C               	bsf	12,6	;volatile
   647  01C5                     l1125:
   648                           
   649                           ;Lab08.c: 181:     PIR1bits.ADIF = 0;
   650  01C5  1283               	bcf	3,5	;RP0=0, select bank0
   651  01C6  1303               	bcf	3,6	;RP1=0, select bank0
   652  01C7  130C               	bcf	12,6	;volatile
   653  01C8                     l1127:
   654                           
   655                           ;Lab08.c: 182:     INTCONbits.T0IF = 0;
   656  01C8  110B               	bcf	11,2	;volatile
   657  01C9                     l1129:
   658                           
   659                           ;Lab08.c: 185:     OPTION_REGbits.PSA = 0;
   660  01C9  1683               	bsf	3,5	;RP0=1, select bank1
   661  01CA  1303               	bcf	3,6	;RP1=0, select bank1
   662  01CB  1181               	bcf	1,3	;volatile
   663  01CC                     l1131:
   664                           
   665                           ;Lab08.c: 186:     OPTION_REGbits.T0CS = 0;
   666  01CC  1281               	bcf	1,5	;volatile
   667  01CD                     l1133:
   668                           
   669                           ;Lab08.c: 187:     OPTION_REGbits.PS2 = 1;
   670  01CD  1501               	bsf	1,2	;volatile
   671  01CE                     l1135:
   672                           
   673                           ;Lab08.c: 188:     OPTION_REGbits.PS1 = 1;
   674  01CE  1481               	bsf	1,1	;volatile
   675  01CF                     l1137:
   676                           
   677                           ;Lab08.c: 189:     OPTION_REGbits.PS0 = 1;
   678  01CF  1401               	bsf	1,0	;volatile
   679  01D0                     l1139:
   680                           
   681                           ;Lab08.c: 190:     TMR0 = 217;
   682  01D0  30D9               	movlw	217
   683  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   684  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   685  01D3  0081               	movwf	1	;volatile
   686  01D4                     l1141:
   687                           
   688                           ;Lab08.c: 193:     ADCON1bits.ADFM = 0;
   689  01D4  1683               	bsf	3,5	;RP0=1, select bank1
   690  01D5  1303               	bcf	3,6	;RP1=0, select bank1
   691  01D6  139F               	bcf	31,7	;volatile
   692  01D7                     l1143:
   693                           
   694                           ;Lab08.c: 194:     ADCON1bits.VCFG0 = 0;
   695  01D7  121F               	bcf	31,4	;volatile
   696  01D8                     l1145:
   697                           
   698                           ;Lab08.c: 195:     ADCON1bits.VCFG1 = 0;
   699  01D8  129F               	bcf	31,5	;volatile
   700  01D9                     l1147:
   701                           
   702                           ;Lab08.c: 197:     ADCON0bits.ADCS1 = 1;
   703  01D9  1283               	bcf	3,5	;RP0=0, select bank0
   704  01DA  1303               	bcf	3,6	;RP1=0, select bank0
   705  01DB  179F               	bsf	31,7	;volatile
   706  01DC                     l1149:
   707                           
   708                           ;Lab08.c: 198:     ADCON0bits.CHS = 0;
   709  01DC  30C3               	movlw	-61
   710  01DD  059F               	andwf	31,f	;volatile
   711  01DE                     l1151:
   712                           
   713                           ;Lab08.c: 199:     _delay((unsigned long)((200)*(8000000/4000000.0)));
   714  01DE  3084               	movlw	132
   715  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   716  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   717  01E1  00AA               	movwf	??_setup
   718  01E2                     u777:
   719  01E2  0BAA               	decfsz	??_setup,f
   720  01E3  29E2               	goto	u777
   721  01E4  0000               	nop
   722  01E5                     l1153:
   723                           
   724                           ;Lab08.c: 200:     ADCON0bits.ADON = 1;
   725  01E5  1283               	bcf	3,5	;RP0=0, select bank0
   726  01E6  1303               	bcf	3,6	;RP1=0, select bank0
   727  01E7  141F               	bsf	31,0	;volatile
   728  01E8                     l1155:
   729                           
   730                           ;Lab08.c: 201:     _delay((unsigned long)((200)*(8000000/4000000.0)));
   731  01E8  3084               	movlw	132
   732  01E9  1283               	bcf	3,5	;RP0=0, select bank0
   733  01EA  1303               	bcf	3,6	;RP1=0, select bank0
   734  01EB  00AA               	movwf	??_setup
   735  01EC                     u787:
   736  01EC  0BAA               	decfsz	??_setup,f
   737  01ED  29EC               	goto	u787
   738  01EE  0000               	nop
   739  01EF                     l1157:
   740                           
   741                           ;Lab08.c: 204:     flags = 0X00;
   742  01EF  01F7               	clrf	_flags
   743  01F0  01F8               	clrf	_flags+1
   744  01F1                     l90:
   745  01F1  0008               	return
   746  01F2                     __end_of_setup:
   747                           
   748                           	psect	text2
   749  015A                     __ptext2:	
   750 ;; *************** function _decimal *****************
   751 ;; Defined at:
   752 ;;		line 211 in file "Lab08.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  2   22[None  ] int 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0
   769 ;;      Totals:         0       0       0       0       0
   770 ;;Total ram usage:        0 bytes
   771 ;; Hardware stack levels used:    1
   772 ;; Hardware stack levels required when called:    2
   773 ;; This function calls:
   774 ;;		___awdiv
   775 ;;		___awmod
   776 ;; This function is called by:
   777 ;;		_main
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _decimal
   783  015A                     _decimal:
   784  015A                     l1159:	
   785                           ;incstack = 0
   786                           ; Regs used in _decimal: [wreg+status,2+status,0+pclath+cstack]
   787                           
   788                           
   789                           ;Lab08.c: 212:     centena = variable/100;
   790  015A  3064               	movlw	100
   791  015B  1283               	bcf	3,5	;RP0=0, select bank0
   792  015C  1303               	bcf	3,6	;RP1=0, select bank0
   793  015D  00AA               	movwf	___awdiv@divisor
   794  015E  3000               	movlw	0
   795  015F  00AB               	movwf	___awdiv@divisor+1
   796  0160  0876               	movf	_variable+1,w
   797  0161  00AD               	movwf	___awdiv@dividend+1
   798  0162  0875               	movf	_variable,w
   799  0163  00AC               	movwf	___awdiv@dividend
   800  0164  120A  118A  202F  120A  118A  	fcall	___awdiv
   801  0169  1283               	bcf	3,5	;RP0=0, select bank0
   802  016A  1303               	bcf	3,6	;RP1=0, select bank0
   803  016B  082B               	movf	?___awdiv+1,w
   804  016C  00B7               	movwf	_centena+1
   805  016D  082A               	movf	?___awdiv,w
   806  016E  00B6               	movwf	_centena
   807                           
   808                           ;Lab08.c: 213:     residuo = variable%100;
   809  016F  3064               	movlw	100
   810  0170  00AA               	movwf	___awmod@divisor
   811  0171  3000               	movlw	0
   812  0172  00AB               	movwf	___awmod@divisor+1
   813  0173  0876               	movf	_variable+1,w
   814  0174  00AD               	movwf	___awmod@dividend+1
   815  0175  0875               	movf	_variable,w
   816  0176  00AC               	movwf	___awmod@dividend
   817  0177  120A  118A  20FF  120A  118A  	fcall	___awmod
   818  017C  1283               	bcf	3,5	;RP0=0, select bank0
   819  017D  1303               	bcf	3,6	;RP1=0, select bank0
   820  017E  082B               	movf	?___awmod+1,w
   821  017F  00B5               	movwf	_residuo+1
   822  0180  082A               	movf	?___awmod,w
   823  0181  00B4               	movwf	_residuo
   824                           
   825                           ;Lab08.c: 214:     decena = residuo/10;
   826  0182  300A               	movlw	10
   827  0183  00AA               	movwf	___awdiv@divisor
   828  0184  3000               	movlw	0
   829  0185  00AB               	movwf	___awdiv@divisor+1
   830  0186  0835               	movf	_residuo+1,w
   831  0187  00AD               	movwf	___awdiv@dividend+1
   832  0188  0834               	movf	_residuo,w
   833  0189  00AC               	movwf	___awdiv@dividend
   834  018A  120A  118A  202F  120A  118A  	fcall	___awdiv
   835  018F  1283               	bcf	3,5	;RP0=0, select bank0
   836  0190  1303               	bcf	3,6	;RP1=0, select bank0
   837  0191  082B               	movf	?___awdiv+1,w
   838  0192  00B9               	movwf	_decena+1
   839  0193  082A               	movf	?___awdiv,w
   840  0194  00B8               	movwf	_decena
   841                           
   842                           ;Lab08.c: 215:     unidad = residuo%10;
   843  0195  300A               	movlw	10
   844  0196  00AA               	movwf	___awmod@divisor
   845  0197  3000               	movlw	0
   846  0198  00AB               	movwf	___awmod@divisor+1
   847  0199  0835               	movf	_residuo+1,w
   848  019A  00AD               	movwf	___awmod@dividend+1
   849  019B  0834               	movf	_residuo,w
   850  019C  00AC               	movwf	___awmod@dividend
   851  019D  120A  118A  20FF  120A  118A  	fcall	___awmod
   852  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   853  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   854  01A4  082B               	movf	?___awmod+1,w
   855  01A5  00BB               	movwf	_unidad+1
   856  01A6  082A               	movf	?___awmod,w
   857  01A7  00BA               	movwf	_unidad
   858  01A8                     l93:
   859  01A8  0008               	return
   860  01A9                     __end_of_decimal:
   861                           
   862                           	psect	text3
   863  00FF                     __ptext3:	
   864 ;; *************** function ___awmod *****************
   865 ;; Defined at:
   866 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  divisor         2    0[BANK0 ] int 
   869 ;;  dividend        2    2[BANK0 ] int 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  sign            1    6[BANK0 ] unsigned char 
   872 ;;  counter         1    5[BANK0 ] unsigned char 
   873 ;; Return value:  Size  Location     Type
   874 ;;                  2    0[BANK0 ] int 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   882 ;;      Params:         0       4       0       0       0
   883 ;;      Locals:         0       2       0       0       0
   884 ;;      Temps:          0       1       0       0       0
   885 ;;      Totals:         0       7       0       0       0
   886 ;;Total ram usage:        7 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    1
   889 ;; This function calls:
   890 ;;		Nothing
   891 ;; This function is called by:
   892 ;;		_decimal
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           
   897                           ;psect for function ___awmod
   898  00FF                     ___awmod:
   899  00FF                     l1065:	
   900                           ;incstack = 0
   901                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   902                           
   903  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   904  0100  1303               	bcf	3,6	;RP1=0, select bank0
   905  0101  01B0               	clrf	___awmod@sign
   906  0102                     l1067:
   907  0102  1FAD               	btfss	___awmod@dividend+1,7
   908  0103  2905               	goto	u651
   909  0104  2906               	goto	u650
   910  0105                     u651:
   911  0105  290D               	goto	l1073
   912  0106                     u650:
   913  0106                     l1069:
   914  0106  09AC               	comf	___awmod@dividend,f
   915  0107  09AD               	comf	___awmod@dividend+1,f
   916  0108  0AAC               	incf	___awmod@dividend,f
   917  0109  1903               	skipnz
   918  010A  0AAD               	incf	___awmod@dividend+1,f
   919  010B                     l1071:
   920  010B  01B0               	clrf	___awmod@sign
   921  010C  0AB0               	incf	___awmod@sign,f
   922  010D                     l1073:
   923  010D  1FAB               	btfss	___awmod@divisor+1,7
   924  010E  2910               	goto	u661
   925  010F  2911               	goto	u660
   926  0110                     u661:
   927  0110  2916               	goto	l1077
   928  0111                     u660:
   929  0111                     l1075:
   930  0111  09AA               	comf	___awmod@divisor,f
   931  0112  09AB               	comf	___awmod@divisor+1,f
   932  0113  0AAA               	incf	___awmod@divisor,f
   933  0114  1903               	skipnz
   934  0115  0AAB               	incf	___awmod@divisor+1,f
   935  0116                     l1077:
   936  0116  082A               	movf	___awmod@divisor,w
   937  0117  042B               	iorwf	___awmod@divisor+1,w
   938  0118  1903               	btfsc	3,2
   939  0119  291B               	goto	u671
   940  011A  291C               	goto	u670
   941  011B                     u671:
   942  011B  294B               	goto	l1095
   943  011C                     u670:
   944  011C                     l1079:
   945  011C  01AF               	clrf	___awmod@counter
   946  011D  0AAF               	incf	___awmod@counter,f
   947  011E  292A               	goto	l1085
   948  011F                     l1081:
   949  011F  3001               	movlw	1
   950  0120                     u685:
   951  0120  1003               	clrc
   952  0121  0DAA               	rlf	___awmod@divisor,f
   953  0122  0DAB               	rlf	___awmod@divisor+1,f
   954  0123  3EFF               	addlw	-1
   955  0124  1D03               	skipz
   956  0125  2920               	goto	u685
   957  0126                     l1083:
   958  0126  3001               	movlw	1
   959  0127  00AE               	movwf	??___awmod
   960  0128  082E               	movf	??___awmod,w
   961  0129  07AF               	addwf	___awmod@counter,f
   962  012A                     l1085:
   963  012A  1FAB               	btfss	___awmod@divisor+1,7
   964  012B  292D               	goto	u691
   965  012C  292E               	goto	u690
   966  012D                     u691:
   967  012D  291F               	goto	l1081
   968  012E                     u690:
   969  012E                     l1087:
   970  012E  082B               	movf	___awmod@divisor+1,w
   971  012F  022D               	subwf	___awmod@dividend+1,w
   972  0130  1D03               	skipz
   973  0131  2934               	goto	u705
   974  0132  082A               	movf	___awmod@divisor,w
   975  0133  022C               	subwf	___awmod@dividend,w
   976  0134                     u705:
   977  0134  1C03               	skipc
   978  0135  2937               	goto	u701
   979  0136  2938               	goto	u700
   980  0137                     u701:
   981  0137  293E               	goto	l1091
   982  0138                     u700:
   983  0138                     l1089:
   984  0138  082A               	movf	___awmod@divisor,w
   985  0139  02AC               	subwf	___awmod@dividend,f
   986  013A  082B               	movf	___awmod@divisor+1,w
   987  013B  1C03               	skipc
   988  013C  03AD               	decf	___awmod@dividend+1,f
   989  013D  02AD               	subwf	___awmod@dividend+1,f
   990  013E                     l1091:
   991  013E  3001               	movlw	1
   992  013F                     u715:
   993  013F  1003               	clrc
   994  0140  0CAB               	rrf	___awmod@divisor+1,f
   995  0141  0CAA               	rrf	___awmod@divisor,f
   996  0142  3EFF               	addlw	-1
   997  0143  1D03               	skipz
   998  0144  293F               	goto	u715
   999  0145                     l1093:
  1000  0145  3001               	movlw	1
  1001  0146  02AF               	subwf	___awmod@counter,f
  1002  0147  1D03               	btfss	3,2
  1003  0148  294A               	goto	u721
  1004  0149  294B               	goto	u720
  1005  014A                     u721:
  1006  014A  292E               	goto	l1087
  1007  014B                     u720:
  1008  014B                     l1095:
  1009  014B  0830               	movf	___awmod@sign,w
  1010  014C  1903               	btfsc	3,2
  1011  014D  294F               	goto	u731
  1012  014E  2950               	goto	u730
  1013  014F                     u731:
  1014  014F  2955               	goto	l1099
  1015  0150                     u730:
  1016  0150                     l1097:
  1017  0150  09AC               	comf	___awmod@dividend,f
  1018  0151  09AD               	comf	___awmod@dividend+1,f
  1019  0152  0AAC               	incf	___awmod@dividend,f
  1020  0153  1903               	skipnz
  1021  0154  0AAD               	incf	___awmod@dividend+1,f
  1022  0155                     l1099:
  1023  0155  082D               	movf	___awmod@dividend+1,w
  1024  0156  00AB               	movwf	?___awmod+1
  1025  0157  082C               	movf	___awmod@dividend,w
  1026  0158  00AA               	movwf	?___awmod
  1027  0159                     l345:
  1028  0159  0008               	return
  1029  015A                     __end_of___awmod:
  1030                           
  1031                           	psect	text4
  1032  002F                     __ptext4:	
  1033 ;; *************** function ___awdiv *****************
  1034 ;; Defined at:
  1035 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  divisor         2    0[BANK0 ] int 
  1038 ;;  dividend        2    2[BANK0 ] int 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  quotient        2    7[BANK0 ] int 
  1041 ;;  sign            1    6[BANK0 ] unsigned char 
  1042 ;;  counter         1    5[BANK0 ] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2    0[BANK0 ] int 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       4       0       0       0
  1053 ;;      Locals:         0       4       0       0       0
  1054 ;;      Temps:          0       1       0       0       0
  1055 ;;      Totals:         0       9       0       0       0
  1056 ;;Total ram usage:        9 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    1
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_decimal
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           
  1067                           ;psect for function ___awdiv
  1068  002F                     ___awdiv:
  1069  002F                     l1021:	
  1070                           ;incstack = 0
  1071                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1072                           
  1073  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0031  01B0               	clrf	___awdiv@sign
  1076  0032                     l1023:
  1077  0032  1FAB               	btfss	___awdiv@divisor+1,7
  1078  0033  2835               	goto	u551
  1079  0034  2836               	goto	u550
  1080  0035                     u551:
  1081  0035  283D               	goto	l1029
  1082  0036                     u550:
  1083  0036                     l1025:
  1084  0036  09AA               	comf	___awdiv@divisor,f
  1085  0037  09AB               	comf	___awdiv@divisor+1,f
  1086  0038  0AAA               	incf	___awdiv@divisor,f
  1087  0039  1903               	skipnz
  1088  003A  0AAB               	incf	___awdiv@divisor+1,f
  1089  003B                     l1027:
  1090  003B  01B0               	clrf	___awdiv@sign
  1091  003C  0AB0               	incf	___awdiv@sign,f
  1092  003D                     l1029:
  1093  003D  1FAD               	btfss	___awdiv@dividend+1,7
  1094  003E  2840               	goto	u561
  1095  003F  2841               	goto	u560
  1096  0040                     u561:
  1097  0040  284A               	goto	l1035
  1098  0041                     u560:
  1099  0041                     l1031:
  1100  0041  09AC               	comf	___awdiv@dividend,f
  1101  0042  09AD               	comf	___awdiv@dividend+1,f
  1102  0043  0AAC               	incf	___awdiv@dividend,f
  1103  0044  1903               	skipnz
  1104  0045  0AAD               	incf	___awdiv@dividend+1,f
  1105  0046                     l1033:
  1106  0046  3001               	movlw	1
  1107  0047  00AE               	movwf	??___awdiv
  1108  0048  082E               	movf	??___awdiv,w
  1109  0049  06B0               	xorwf	___awdiv@sign,f
  1110  004A                     l1035:
  1111  004A  01B1               	clrf	___awdiv@quotient
  1112  004B  01B2               	clrf	___awdiv@quotient+1
  1113  004C                     l1037:
  1114  004C  082A               	movf	___awdiv@divisor,w
  1115  004D  042B               	iorwf	___awdiv@divisor+1,w
  1116  004E  1903               	btfsc	3,2
  1117  004F  2851               	goto	u571
  1118  0050  2852               	goto	u570
  1119  0051                     u571:
  1120  0051  2889               	goto	l1057
  1121  0052                     u570:
  1122  0052                     l1039:
  1123  0052  01AF               	clrf	___awdiv@counter
  1124  0053  0AAF               	incf	___awdiv@counter,f
  1125  0054  2860               	goto	l1045
  1126  0055                     l1041:
  1127  0055  3001               	movlw	1
  1128  0056                     u585:
  1129  0056  1003               	clrc
  1130  0057  0DAA               	rlf	___awdiv@divisor,f
  1131  0058  0DAB               	rlf	___awdiv@divisor+1,f
  1132  0059  3EFF               	addlw	-1
  1133  005A  1D03               	skipz
  1134  005B  2856               	goto	u585
  1135  005C                     l1043:
  1136  005C  3001               	movlw	1
  1137  005D  00AE               	movwf	??___awdiv
  1138  005E  082E               	movf	??___awdiv,w
  1139  005F  07AF               	addwf	___awdiv@counter,f
  1140  0060                     l1045:
  1141  0060  1FAB               	btfss	___awdiv@divisor+1,7
  1142  0061  2863               	goto	u591
  1143  0062  2864               	goto	u590
  1144  0063                     u591:
  1145  0063  2855               	goto	l1041
  1146  0064                     u590:
  1147  0064                     l1047:
  1148  0064  3001               	movlw	1
  1149  0065                     u605:
  1150  0065  1003               	clrc
  1151  0066  0DB1               	rlf	___awdiv@quotient,f
  1152  0067  0DB2               	rlf	___awdiv@quotient+1,f
  1153  0068  3EFF               	addlw	-1
  1154  0069  1D03               	skipz
  1155  006A  2865               	goto	u605
  1156  006B  082B               	movf	___awdiv@divisor+1,w
  1157  006C  022D               	subwf	___awdiv@dividend+1,w
  1158  006D  1D03               	skipz
  1159  006E  2871               	goto	u615
  1160  006F  082A               	movf	___awdiv@divisor,w
  1161  0070  022C               	subwf	___awdiv@dividend,w
  1162  0071                     u615:
  1163  0071  1C03               	skipc
  1164  0072  2874               	goto	u611
  1165  0073  2875               	goto	u610
  1166  0074                     u611:
  1167  0074  287C               	goto	l1053
  1168  0075                     u610:
  1169  0075                     l1049:
  1170  0075  082A               	movf	___awdiv@divisor,w
  1171  0076  02AC               	subwf	___awdiv@dividend,f
  1172  0077  082B               	movf	___awdiv@divisor+1,w
  1173  0078  1C03               	skipc
  1174  0079  03AD               	decf	___awdiv@dividend+1,f
  1175  007A  02AD               	subwf	___awdiv@dividend+1,f
  1176  007B                     l1051:
  1177  007B  1431               	bsf	___awdiv@quotient,0
  1178  007C                     l1053:
  1179  007C  3001               	movlw	1
  1180  007D                     u625:
  1181  007D  1003               	clrc
  1182  007E  0CAB               	rrf	___awdiv@divisor+1,f
  1183  007F  0CAA               	rrf	___awdiv@divisor,f
  1184  0080  3EFF               	addlw	-1
  1185  0081  1D03               	skipz
  1186  0082  287D               	goto	u625
  1187  0083                     l1055:
  1188  0083  3001               	movlw	1
  1189  0084  02AF               	subwf	___awdiv@counter,f
  1190  0085  1D03               	btfss	3,2
  1191  0086  2888               	goto	u631
  1192  0087  2889               	goto	u630
  1193  0088                     u631:
  1194  0088  2864               	goto	l1047
  1195  0089                     u630:
  1196  0089                     l1057:
  1197  0089  0830               	movf	___awdiv@sign,w
  1198  008A  1903               	btfsc	3,2
  1199  008B  288D               	goto	u641
  1200  008C  288E               	goto	u640
  1201  008D                     u641:
  1202  008D  2893               	goto	l1061
  1203  008E                     u640:
  1204  008E                     l1059:
  1205  008E  09B1               	comf	___awdiv@quotient,f
  1206  008F  09B2               	comf	___awdiv@quotient+1,f
  1207  0090  0AB1               	incf	___awdiv@quotient,f
  1208  0091  1903               	skipnz
  1209  0092  0AB2               	incf	___awdiv@quotient+1,f
  1210  0093                     l1061:
  1211  0093  0832               	movf	___awdiv@quotient+1,w
  1212  0094  00AB               	movwf	?___awdiv+1
  1213  0095  0831               	movf	___awdiv@quotient,w
  1214  0096  00AA               	movwf	?___awdiv
  1215  0097                     l332:
  1216  0097  0008               	return
  1217  0098                     __end_of___awdiv:
  1218                           
  1219                           	psect	text5
  1220  0098                     __ptext5:	
  1221 ;; *************** function _isr *****************
  1222 ;; Defined at:
  1223 ;;		line 69 in file "Lab08.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0
  1239 ;;      Temps:          5       0       0       0       0
  1240 ;;      Totals:         5       0       0       0       0
  1241 ;;Total ram usage:        5 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		Interrupt level 1
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function _isr
  1252  0098                     _isr:
  1253  0098                     i1l965:
  1254                           
  1255                           ;Lab08.c: 72:     if (T0IF == 1)
  1256  0098  1D0B               	btfss	11,2	;volatile
  1257  0099  289B               	goto	u47_21
  1258  009A  289C               	goto	u47_20
  1259  009B                     u47_21:
  1260  009B  28DC               	goto	i1l995
  1261  009C                     u47_20:
  1262  009C                     i1l967:
  1263                           
  1264                           ;Lab08.c: 73:     {;Lab08.c: 74:         PORTBbits.RB2 = 0;
  1265  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1266  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1267  009E  1106               	bcf	6,2	;volatile
  1268                           
  1269                           ;Lab08.c: 75:         PORTBbits.RB3 = 0;
  1270  009F  1186               	bcf	6,3	;volatile
  1271                           
  1272                           ;Lab08.c: 76:         PORTBbits.RB4 = 0;
  1273  00A0  1206               	bcf	6,4	;volatile
  1274                           
  1275                           ;Lab08.c: 78:         INTCONbits.T0IF = 0;
  1276  00A1  110B               	bcf	11,2	;volatile
  1277  00A2                     i1l969:
  1278                           
  1279                           ;Lab08.c: 79:         TMR0 = 217;
  1280  00A2  30D9               	movlw	217
  1281  00A3  0081               	movwf	1	;volatile
  1282  00A4                     i1l971:
  1283                           
  1284                           ;Lab08.c: 81:         if (flags == 0) {
  1285  00A4  0877               	movf	_flags,w
  1286  00A5  0478               	iorwf	_flags+1,w
  1287  00A6  1D03               	btfss	3,2
  1288  00A7  28A9               	goto	u48_21
  1289  00A8  28AA               	goto	u48_20
  1290  00A9                     u48_21:
  1291  00A9  28B7               	goto	i1l979
  1292  00AA                     u48_20:
  1293  00AA                     i1l973:
  1294                           
  1295                           ;Lab08.c: 82:            PORTBbits.RB2 = 0;
  1296  00AA  1106               	bcf	6,2	;volatile
  1297                           
  1298                           ;Lab08.c: 83:            PORTBbits.RB0 = 1;
  1299  00AB  1406               	bsf	6,0	;volatile
  1300  00AC                     i1l975:
  1301                           
  1302                           ;Lab08.c: 84:            PORTD = tabla[centena];
  1303  00AC  0836               	movf	_centena,w
  1304  00AD  3E20               	addlw	(low (_tabla| 0))& (0+255)
  1305  00AE  0084               	movwf	4
  1306  00AF  1383               	bcf	3,7	;select IRP bank0
  1307  00B0  0800               	movf	0,w
  1308  00B1  0088               	movwf	8	;volatile
  1309  00B2                     i1l977:
  1310                           
  1311                           ;Lab08.c: 85:            flags = 1;
  1312  00B2  3001               	movlw	1
  1313  00B3  00F7               	movwf	_flags
  1314  00B4  3000               	movlw	0
  1315  00B5  00F8               	movwf	_flags+1
  1316                           
  1317                           ;Lab08.c: 86:         }
  1318  00B6  28DC               	goto	i1l995
  1319  00B7                     i1l979:
  1320  00B7  0377               	decf	_flags,w
  1321  00B8  0478               	iorwf	_flags+1,w
  1322  00B9  1D03               	btfss	3,2
  1323  00BA  28BC               	goto	u49_21
  1324  00BB  28BD               	goto	u49_20
  1325  00BC                     u49_21:
  1326  00BC  28CA               	goto	i1l987
  1327  00BD                     u49_20:
  1328  00BD                     i1l981:
  1329                           
  1330                           ;Lab08.c: 89:            PORTBbits.RB0 = 0;
  1331  00BD  1006               	bcf	6,0	;volatile
  1332                           
  1333                           ;Lab08.c: 90:            PORTBbits.RB1 = 1;
  1334  00BE  1486               	bsf	6,1	;volatile
  1335  00BF                     i1l983:
  1336                           
  1337                           ;Lab08.c: 91:            PORTD = tabla[decena];
  1338  00BF  0838               	movf	_decena,w
  1339  00C0  3E20               	addlw	(low (_tabla| 0))& (0+255)
  1340  00C1  0084               	movwf	4
  1341  00C2  1383               	bcf	3,7	;select IRP bank0
  1342  00C3  0800               	movf	0,w
  1343  00C4  0088               	movwf	8	;volatile
  1344  00C5                     i1l985:
  1345                           
  1346                           ;Lab08.c: 92:            flags = 2;
  1347  00C5  3002               	movlw	2
  1348  00C6  00F7               	movwf	_flags
  1349  00C7  3000               	movlw	0
  1350  00C8  00F8               	movwf	_flags+1
  1351                           
  1352                           ;Lab08.c: 93:         }
  1353  00C9  28DC               	goto	i1l995
  1354  00CA                     i1l987:
  1355  00CA  3002               	movlw	2
  1356  00CB  0677               	xorwf	_flags,w
  1357  00CC  0478               	iorwf	_flags+1,w
  1358  00CD  1D03               	btfss	3,2
  1359  00CE  28D0               	goto	u50_21
  1360  00CF  28D1               	goto	u50_20
  1361  00D0                     u50_21:
  1362  00D0  28DC               	goto	i1l69
  1363  00D1                     u50_20:
  1364  00D1                     i1l989:
  1365                           
  1366                           ;Lab08.c: 96:            PORTBbits.RB1 = 0;
  1367  00D1  1086               	bcf	6,1	;volatile
  1368                           
  1369                           ;Lab08.c: 97:            PORTBbits.RB2 = 1;
  1370  00D2  1506               	bsf	6,2	;volatile
  1371  00D3                     i1l991:
  1372                           
  1373                           ;Lab08.c: 98:            PORTD = tabla[unidad];
  1374  00D3  083A               	movf	_unidad,w
  1375  00D4  3E20               	addlw	(low (_tabla| 0))& (0+255)
  1376  00D5  0084               	movwf	4
  1377  00D6  1383               	bcf	3,7	;select IRP bank0
  1378  00D7  0800               	movf	0,w
  1379  00D8  0088               	movwf	8	;volatile
  1380  00D9                     i1l993:
  1381                           
  1382                           ;Lab08.c: 99:            flags = 0;
  1383  00D9  01F7               	clrf	_flags
  1384  00DA  01F8               	clrf	_flags+1
  1385  00DB  28DC               	goto	i1l995
  1386  00DC                     i1l69:
  1387  00DC                     i1l995:
  1388                           
  1389                           ;Lab08.c: 103:     if (PIR1bits.ADIF) {
  1390  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1391  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1392  00DE  1F0C               	btfss	12,6	;volatile
  1393  00DF  28E1               	goto	u51_21
  1394  00E0  28E2               	goto	u51_20
  1395  00E1                     u51_21:
  1396  00E1  28F6               	goto	i1l76
  1397  00E2                     u51_20:
  1398  00E2                     i1l997:
  1399                           
  1400                           ;Lab08.c: 104:         if (ADCON0bits.CHS == 0) {
  1401  00E2  0C1F               	rrf	31,w	;volatile
  1402  00E3  00F0               	movwf	??_isr
  1403  00E4  0C70               	rrf	??_isr,w
  1404  00E5  390F               	andlw	15
  1405  00E6  3A00               	xorlw	0
  1406  00E7  1D03               	skipz
  1407  00E8  28EA               	goto	u52_21
  1408  00E9  28EB               	goto	u52_20
  1409  00EA                     u52_21:
  1410  00EA  28EE               	goto	i1l1001
  1411  00EB                     u52_20:
  1412  00EB                     i1l999:
  1413                           
  1414                           ;Lab08.c: 105:             PORTC = ADRESH;
  1415  00EB  081E               	movf	30,w	;volatile
  1416  00EC  0087               	movwf	7	;volatile
  1417                           
  1418                           ;Lab08.c: 106:         }
  1419  00ED  28F5               	goto	i1l1003
  1420  00EE                     i1l1001:
  1421                           
  1422                           ;Lab08.c: 109:             variable = ADRESH;
  1423  00EE  081E               	movf	30,w	;volatile
  1424  00EF  00F0               	movwf	??_isr
  1425  00F0  01F1               	clrf	??_isr+1
  1426  00F1  0870               	movf	??_isr,w
  1427  00F2  00F5               	movwf	_variable
  1428  00F3  0871               	movf	??_isr+1,w
  1429  00F4  00F6               	movwf	_variable+1
  1430  00F5                     i1l1003:
  1431                           
  1432                           ;Lab08.c: 112:         PIR1bits.ADIF = 0;
  1433  00F5  130C               	bcf	12,6	;volatile
  1434  00F6                     i1l76:
  1435  00F6  0874               	movf	??_isr+4,w
  1436  00F7  008A               	movwf	10
  1437  00F8  0873               	movf	??_isr+3,w
  1438  00F9  0084               	movwf	4
  1439  00FA  0E72               	swapf	??_isr+2,w
  1440  00FB  0083               	movwf	3
  1441  00FC  0EFE               	swapf	btemp,f
  1442  00FD  0E7E               	swapf	btemp,w
  1443  00FE  0009               	retfie
  1444  00FF                     __end_of_isr:
  1445  007E                     btemp	set	126	;btemp
  1446  007E                     wtemp0	set	126
  1447                           
  1448                           	psect	intentry
  1449  0004                     __pintentry:	
  1450                           ;incstack = 0
  1451                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1452                           
  1453  0004                     interrupt_function:
  1454  007E                     saved_w	set	btemp
  1455  0004  00FE               	movwf	btemp
  1456  0005  0E03               	swapf	3,w
  1457  0006  00F2               	movwf	??_isr+2
  1458  0007  0804               	movf	4,w
  1459  0008  00F3               	movwf	??_isr+3
  1460  0009  080A               	movf	10,w
  1461  000A  00F4               	movwf	??_isr+4
  1462  000B  120A  118A  2898   	ljmp	_isr
  1463                           
  1464                           	psect	config
  1465                           
  1466                           ;Config register CONFIG1 @ 0x2007
  1467                           ;	Oscillator Selection bits
  1468                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1469                           ;	Watchdog Timer Enable bit
  1470                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1471                           ;	Power-up Timer Enable bit
  1472                           ;	PWRTE = ON, PWRT enabled
  1473                           ;	RE3/MCLR pin function select bit
  1474                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1475                           ;	Code Protection bit
  1476                           ;	CP = OFF, Program memory code protection is disabled
  1477                           ;	Data Code Protection bit
  1478                           ;	CPD = OFF, Data memory code protection is disabled
  1479                           ;	Brown Out Reset Selection bits
  1480                           ;	BOREN = OFF, BOR disabled
  1481                           ;	Internal External Switchover bit
  1482                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1483                           ;	Fail-Safe Clock Monitor Enabled bit
  1484                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1485                           ;	Low Voltage Programming Enable bit
  1486                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1487                           ;	In-Circuit Debugger Mode bit
  1488                           ;	DEBUG = 0x1, unprogrammed default
  1489  2007                     	org	8199
  1490  2007  30C4               	dw	12484
  1491                           
  1492                           ;Config register CONFIG2 @ 0x2008
  1493                           ;	Brown-out Reset Selection bit
  1494                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1495                           ;	Flash Program Memory Self Write Enable bits
  1496                           ;	WRT = OFF, Write protection off
  1497  2008                     	org	8200
  1498  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     10      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _decimal->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1598
                                              9 BANK0      1     1      0
                            _decimal
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _decimal                                              0     0      0    1598
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _decimal
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      1C       5       35.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 22 21:31:04 2021

                      pc 0002                       l81 01FA                       l90 01F1  
                     l93 01A8             ___awdiv@sign 0030                       fsr 0004  
                    l332 0097                      l345 0159                      u610 0075  
                    u611 0074                      u700 0138                      u605 0065  
                    u701 0137                      u630 0089                      u550 0036  
                    u631 0088                      u615 0071                      u551 0035  
                    u640 008E                      u560 0041                      u720 014B  
                    u641 008D                      u625 007D                      u561 0040  
                    u721 014A                      u705 0134                      u570 0052  
                    u730 0150                      u650 0106                      u571 0051  
                    u731 014F                      u715 013F                      u651 0105  
                    u660 0111                      u740 0205                      u661 0110  
                    u741 0204                      u590 0064                      u670 011C  
                    u750 020E                      u591 0063                      u671 011B  
                    u751 020D                      u585 0056                      u690 012E  
                    u691 012D                      u685 0120                      u767 0219  
                    u777 01E2                      u787 01EC                      _isr 0098  
                    fsr0 0004                      indf 0000             ___awmod@sign 0030  
                   l1021 002F                     l1031 0041                     l1023 0032  
                   l1111 01BE                     l1103 01A9                     l1041 0055  
                   l1033 0046                     l1025 0036                     l1121 01C3  
                   l1113 01BF                     l1105 01AD                     l1051 007B  
                   l1043 005C                     l1035 004A                     l1027 003B  
                   l1131 01CC                     l1123 01C4                     l1115 01C0  
                   l1107 01AE                     l1061 0093                     l1053 007C  
                   l1045 0060                     l1037 004C                     l1029 003D  
                   l1141 01D4                     l1133 01CD                     l1125 01C5  
                   l1117 01C1                     l1109 01BB                     l1055 0083  
                   l1047 0064                     l1039 0052                     l1071 010B  
                   l1151 01DE                     l1143 01D7                     l1135 01CE  
                   l1127 01C8                     l1119 01C2                     l1049 0075  
                   l1057 0089                     l1081 011F                     l1073 010D  
                   l1065 00FF                     l1153 01E5                     l1145 01D8  
                   l1137 01CF                     l1129 01C9                     l1161 01F2  
                   l1059 008E                     l1091 013E                     l1083 0126  
                   l1075 0111                     l1067 0102                     l1155 01E8  
                   l1147 01D9                     l1139 01D0                     l1171 0213  
                   l1163 01F7                     l1093 0145                     l1085 012A  
                   l1077 0116                     l1069 0106                     l1157 01EF  
                   l1149 01DC                     l1173 0215                     l1165 01FF  
                   l1087 012E                     l1079 011C                     l1095 014B  
                   l1159 015A                     l1175 021C                     l1167 0205  
                   l1097 0150                     l1089 0138                     l1169 020E  
                   l1099 0155                     ?_isr 0070                     _T0IF 005A  
                   i1l76 00F6                     i1l69 00DC                     _TMR0 0001  
                   _main 01F2                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 0098  
        __end_of___awmod 015A                    _ANSEL 0188          ___awdiv@divisor 002A  
                  i1l971 00A4                    i1l981 00BD                    i1l973 00AA  
                  i1l965 0098                    i1l991 00D3                    i1l983 00BF  
                  i1l975 00AC                    i1l967 009C                    i1l993 00D9  
                  i1l985 00C5                    i1l977 00B2                    i1l969 00A2  
                  i1l987 00CA                    i1l979 00B7                    i1l995 00DC  
                  i1l997 00E2                    i1l989 00D1                    i1l999 00EB  
        ___awdiv@counter 002F                    u50_20 00D1                    u50_21 00D0  
                  u51_20 00E2                    u51_21 00E1                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u52_20 00EB                    u52_21 00EA                    u47_20 009C  
                  u47_21 009B                    u48_20 00AA                    u48_21 00A9  
                  u49_20 00BD                    u49_21 00BC                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_decimal 01A9                    _flags 0077                    _tabla 0020  
                  _setup 01A9                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0223  
                 ??_main 0033                   _ADRESH 001E         ___awdiv@dividend 002C  
                 ?_setup 0070                   _ANSELH 0189                   i1l1001 00EE  
                 i1l1003 00F5                ??___awdiv 002E                   _decena 0038  
              ??___awmod 002E                ??_decimal 0075         ___awdiv@quotient 0031  
        ___awmod@divisor 002A          ___awmod@counter 002F                   _unidad 003A  
                 saved_w 007E  __end_of__initialization 002B           __pcstackCOMMON 0070  
           __pidataBANK0 0236            __end_of_setup 01F2           _OPTION_REGbits 0081  
                ??_setup 002A               __pbssBANK0 0034               __pmaintext 01F2  
             __pintentry 0004                  ___awdiv 002F                  ___awmod 00FF  
                _decimal 015A                  _centena 0036                  __ptext1 01A9  
                __ptext2 015A                  __ptext3 00FF                  __ptext4 002F  
                __ptext5 0098             __size_of_isr 0067         ___awmod@dividend 002C  
                _residuo 0034     end_of_initialization 002B                _PORTBbits 0006  
    start_initialization 0011              __end_of_isr 00FF               init_fetch0 0223  
            __pdataBANK0 0020              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 002A                 ?___awdiv 002A                 ?___awmod 002A  
               ?_decimal 0070           __size_of_setup 0049        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of___awdiv 0069         __size_of___awmod 005B  
       __size_of_decimal 004F            __size_of_main 0031                 _variable 0075  
             _INTCONbits 000B                 init_ram0 0227                 intlevel1 0000  
             _OSCCONbits 008F  
