

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat May 08 21:49:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  001A                     _RCREG	set	26
   207  0019                     _TXREG	set	25
   208  0018                     _RCSTAbits	set	24
   209  000C                     _PIR1bits	set	12
   210  000B                     _INTCONbits	set	11
   211  0006                     _PORTB	set	6
   212  0005                     _PORTA	set	5
   213  0065                     _RCIF	set	101
   214  0064                     _TXIF	set	100
   215  009A                     _SPBRGH	set	154
   216  0099                     _SPBRG	set	153
   217  0098                     _TXSTAbits	set	152
   218  008C                     _PIE1bits	set	140
   219  008F                     _OSCCONbits	set	143
   220  0086                     _TRISB	set	134
   221  0085                     _TRISA	set	133
   222  0187                     _BAUDCTLbits	set	391
   223  0189                     _ANSELH	set	393
   224  0188                     _ANSEL	set	392
   225                           
   226                           	psect	strings
   227  0003                     __pstrings:
   228  0003                     stringtab:
   229  0003                     __stringtab:
   230                           
   231                           ;	String table - string pointers are 2 bytes each
   232  0003  1BFF               	btfsc	btemp+1,7
   233  0004  280D               	ljmp	stringcode
   234  0005  1383               	bcf	3,7
   235  0006  187F               	btfsc	btemp+1,0
   236  0007  1783               	bsf	3,7
   237  0008  0800               	movf	0,w
   238  0009  0A84               	incf	4,f
   239  000A  1903               	skipnz
   240  000B  0AFF               	incf	btemp+1,f
   241  000C  0008               	return
   242  000D                     stringcode:
   243  000D  087F               	movf	btemp+1,w
   244  000E  397F               	andlw	127
   245  000F  008A               	movwf	10
   246  0010  0804               	movf	4,w
   247  0011  0A84               	incf	4,f
   248  0012  1903               	skipnz
   249  0013  0AFF               	incf	btemp+1,f
   250  0014  0082               	movwf	2
   251  0015                     __stringbase:
   252  0015                     __end_of__stringtab:
   253                           
   254                           	psect	stringtext
   255  0800                     __pstringtext:
   256  0800                     STR_7:
   257  0800  340D               	retlw	13
   258  0801  340D               	retlw	13
   259  0802  3450               	retlw	80	;'P'
   260  0803  3472               	retlw	114	;'r'
   261  0804  3465               	retlw	101	;'e'
   262  0805  3473               	retlw	115	;'s'
   263  0806  3469               	retlw	105	;'i'
   264  0807  346F               	retlw	111	;'o'
   265  0808  346E               	retlw	110	;'n'
   266  0809  3465               	retlw	101	;'e'
   267  080A  3420               	retlw	32	;' '
   268  080B  3465               	retlw	101	;'e'
   269  080C  346C               	retlw	108	;'l'
   270  080D  3420               	retlw	32	;' '
   271  080E  3463               	retlw	99	;'c'
   272  080F  3461               	retlw	97	;'a'
   273  0810  3472               	retlw	114	;'r'
   274  0811  3461               	retlw	97	;'a'
   275  0812  3463               	retlw	99	;'c'
   276  0813  3474               	retlw	116	;'t'
   277  0814  3465               	retlw	101	;'e'
   278  0815  3472               	retlw	114	;'r'
   279  0816  3420               	retlw	32	;' '
   280  0817  3461               	retlw	97	;'a'
   281  0818  3420               	retlw	32	;' '
   282  0819  3463               	retlw	99	;'c'
   283  081A  346F               	retlw	111	;'o'
   284  081B  346C               	retlw	108	;'l'
   285  081C  346F               	retlw	111	;'o'
   286  081D  3463               	retlw	99	;'c'
   287  081E  3461               	retlw	97	;'a'
   288  081F  3472               	retlw	114	;'r'
   289  0820  3420               	retlw	32	;' '
   290  0821  3465               	retlw	101	;'e'
   291  0822  346E               	retlw	110	;'n'
   292  0823  3420               	retlw	32	;' '
   293  0824  3450               	retlw	80	;'P'
   294  0825  344F               	retlw	79	;'O'
   295  0826  3452               	retlw	82	;'R'
   296  0827  3454               	retlw	84	;'T'
   297  0828  3441               	retlw	65	;'A'
   298  0829  340D               	retlw	13
   299  082A  340D               	retlw	13
   300  082B  3400               	retlw	0
   301  082C                     STR_8:
   302  082C  340D               	retlw	13
   303  082D  340D               	retlw	13
   304  082E  3450               	retlw	80	;'P'
   305  082F  3472               	retlw	114	;'r'
   306  0830  3465               	retlw	101	;'e'
   307  0831  3473               	retlw	115	;'s'
   308  0832  3469               	retlw	105	;'i'
   309  0833  346F               	retlw	111	;'o'
   310  0834  346E               	retlw	110	;'n'
   311  0835  3465               	retlw	101	;'e'
   312  0836  3420               	retlw	32	;' '
   313  0837  3465               	retlw	101	;'e'
   314  0838  346C               	retlw	108	;'l'
   315  0839  3420               	retlw	32	;' '
   316  083A  3463               	retlw	99	;'c'
   317  083B  3461               	retlw	97	;'a'
   318  083C  3472               	retlw	114	;'r'
   319  083D  3461               	retlw	97	;'a'
   320  083E  3463               	retlw	99	;'c'
   321  083F  3474               	retlw	116	;'t'
   322  0840  3465               	retlw	101	;'e'
   323  0841  3472               	retlw	114	;'r'
   324  0842  3420               	retlw	32	;' '
   325  0843  3461               	retlw	97	;'a'
   326  0844  3420               	retlw	32	;' '
   327  0845  3463               	retlw	99	;'c'
   328  0846  346F               	retlw	111	;'o'
   329  0847  346C               	retlw	108	;'l'
   330  0848  346F               	retlw	111	;'o'
   331  0849  3463               	retlw	99	;'c'
   332  084A  3461               	retlw	97	;'a'
   333  084B  3472               	retlw	114	;'r'
   334  084C  3420               	retlw	32	;' '
   335  084D  3465               	retlw	101	;'e'
   336  084E  346E               	retlw	110	;'n'
   337  084F  3420               	retlw	32	;' '
   338  0850  3450               	retlw	80	;'P'
   339  0851  344F               	retlw	79	;'O'
   340  0852  3452               	retlw	82	;'R'
   341  0853  3454               	retlw	84	;'T'
   342  0854  3442               	retlw	66	;'B'
   343  0855  340D               	retlw	13
   344  0856  340D               	retlw	13
   345  0857  3400               	retlw	0
   346  0858                     STR_2:
   347  0858  3420               	retlw	32	;' '
   348  0859  3420               	retlw	32	;' '
   349  085A  3420               	retlw	32	;' '
   350  085B  3420               	retlw	32	;' '
   351  085C  3428               	retlw	40	;'('
   352  085D  3431               	retlw	49	;'1'
   353  085E  3429               	retlw	41	;')'
   354  085F  3420               	retlw	32	;' '
   355  0860  3444               	retlw	68	;'D'
   356  0861  3465               	retlw	101	;'e'
   357  0862  3473               	retlw	115	;'s'
   358  0863  3470               	retlw	112	;'p'
   359  0864  346C               	retlw	108	;'l'
   360  0865  3465               	retlw	101	;'e'
   361  0866  3467               	retlw	103	;'g'
   362  0867  3461               	retlw	97	;'a'
   363  0868  3472               	retlw	114	;'r'
   364  0869  3420               	retlw	32	;' '
   365  086A  3463               	retlw	99	;'c'
   366  086B  3461               	retlw	97	;'a'
   367  086C  3464               	retlw	100	;'d'
   368  086D  3465               	retlw	101	;'e'
   369  086E  346E               	retlw	110	;'n'
   370  086F  3461               	retlw	97	;'a'
   371  0870  3420               	retlw	32	;' '
   372  0871  3464               	retlw	100	;'d'
   373  0872  3465               	retlw	101	;'e'
   374  0873  3420               	retlw	32	;' '
   375  0874  3463               	retlw	99	;'c'
   376  0875  3461               	retlw	97	;'a'
   377  0876  3472               	retlw	114	;'r'
   378  0877  3461               	retlw	97	;'a'
   379  0878  3463               	retlw	99	;'c'
   380  0879  3474               	retlw	116	;'t'
   381  087A  3465               	retlw	101	;'e'
   382  087B  3472               	retlw	114	;'r'
   383  087C  3465               	retlw	101	;'e'
   384  087D  3473               	retlw	115	;'s'
   385  087E  3420               	retlw	32	;' '
   386  087F  340D               	retlw	13
   387  0880  3400               	retlw	0
   388  0881                     STR_1:
   389  0881  340D               	retlw	13
   390  0882  3451               	retlw	81	;'Q'
   391  0883  3475               	retlw	117	;'u'
   392  0884  3465               	retlw	101	;'e'
   393  0885  3420               	retlw	32	;' '
   394  0886  3461               	retlw	97	;'a'
   395  0887  3463               	retlw	99	;'c'
   396  0888  3463               	retlw	99	;'c'
   397  0889  3469               	retlw	105	;'i'
   398  088A  346F               	retlw	111	;'o'
   399  088B  346E               	retlw	110	;'n'
   400  088C  3420               	retlw	32	;' '
   401  088D  3464               	retlw	100	;'d'
   402  088E  3465               	retlw	101	;'e'
   403  088F  3473               	retlw	115	;'s'
   404  0890  3465               	retlw	101	;'e'
   405  0891  3461               	retlw	97	;'a'
   406  0892  3420               	retlw	32	;' '
   407  0893  3465               	retlw	101	;'e'
   408  0894  346A               	retlw	106	;'j'
   409  0895  3465               	retlw	101	;'e'
   410  0896  3463               	retlw	99	;'c'
   411  0897  3475               	retlw	117	;'u'
   412  0898  3474               	retlw	116	;'t'
   413  0899  3461               	retlw	97	;'a'
   414  089A  3472               	retlw	114	;'r'
   415  089B  343F               	retlw	63	;'?'
   416  089C  343A               	retlw	58	;':'
   417  089D  3420               	retlw	32	;' '
   418  089E  340D               	retlw	13
   419  089F  3400               	retlw	0
   420  08A0                     STR_5:
   421  08A0  340D               	retlw	13
   422  08A1  340D               	retlw	13
   423  08A2  344C               	retlw	76	;'L'
   424  08A3  3461               	retlw	97	;'a'
   425  08A4  3420               	retlw	32	;' '
   426  08A5  3463               	retlw	99	;'c'
   427  08A6  3461               	retlw	97	;'a'
   428  08A7  3464               	retlw	100	;'d'
   429  08A8  3465               	retlw	101	;'e'
   430  08A9  346E               	retlw	110	;'n'
   431  08AA  3461               	retlw	97	;'a'
   432  08AB  3420               	retlw	32	;' '
   433  08AC  3464               	retlw	100	;'d'
   434  08AD  3465               	retlw	101	;'e'
   435  08AE  3420               	retlw	32	;' '
   436  08AF  3463               	retlw	99	;'c'
   437  08B0  3461               	retlw	97	;'a'
   438  08B1  3472               	retlw	114	;'r'
   439  08B2  3461               	retlw	97	;'a'
   440  08B3  3463               	retlw	99	;'c'
   441  08B4  3474               	retlw	116	;'t'
   442  08B5  3465               	retlw	101	;'e'
   443  08B6  3472               	retlw	114	;'r'
   444  08B7  3465               	retlw	101	;'e'
   445  08B8  3473               	retlw	115	;'s'
   446  08B9  3420               	retlw	32	;' '
   447  08BA  3465               	retlw	101	;'e'
   448  08BB  3473               	retlw	115	;'s'
   449  08BC  343A               	retlw	58	;':'
   450  08BD  3400               	retlw	0
   451  08BE                     STR_3:
   452  08BE  3420               	retlw	32	;' '
   453  08BF  3420               	retlw	32	;' '
   454  08C0  3420               	retlw	32	;' '
   455  08C1  3420               	retlw	32	;' '
   456  08C2  3428               	retlw	40	;'('
   457  08C3  3432               	retlw	50	;'2'
   458  08C4  3429               	retlw	41	;')'
   459  08C5  3420               	retlw	32	;' '
   460  08C6  3443               	retlw	67	;'C'
   461  08C7  3461               	retlw	97	;'a'
   462  08C8  346D               	retlw	109	;'m'
   463  08C9  3462               	retlw	98	;'b'
   464  08CA  3469               	retlw	105	;'i'
   465  08CB  3461               	retlw	97	;'a'
   466  08CC  3472               	retlw	114	;'r'
   467  08CD  3420               	retlw	32	;' '
   468  08CE  3450               	retlw	80	;'P'
   469  08CF  344F               	retlw	79	;'O'
   470  08D0  3452               	retlw	82	;'R'
   471  08D1  3454               	retlw	84	;'T'
   472  08D2  3441               	retlw	65	;'A'
   473  08D3  3420               	retlw	32	;' '
   474  08D4  340D               	retlw	13
   475  08D5  3400               	retlw	0
   476  08D6                     STR_4:
   477  08D6  3420               	retlw	32	;' '
   478  08D7  3420               	retlw	32	;' '
   479  08D8  3420               	retlw	32	;' '
   480  08D9  3420               	retlw	32	;' '
   481  08DA  3428               	retlw	40	;'('
   482  08DB  3433               	retlw	51	;'3'
   483  08DC  3429               	retlw	41	;')'
   484  08DD  3420               	retlw	32	;' '
   485  08DE  3443               	retlw	67	;'C'
   486  08DF  3461               	retlw	97	;'a'
   487  08E0  346D               	retlw	109	;'m'
   488  08E1  3462               	retlw	98	;'b'
   489  08E2  3469               	retlw	105	;'i'
   490  08E3  3461               	retlw	97	;'a'
   491  08E4  3472               	retlw	114	;'r'
   492  08E5  3420               	retlw	32	;' '
   493  08E6  3450               	retlw	80	;'P'
   494  08E7  344F               	retlw	79	;'O'
   495  08E8  3452               	retlw	82	;'R'
   496  08E9  3454               	retlw	84	;'T'
   497  08EA  3442               	retlw	66	;'B'
   498  08EB  3420               	retlw	32	;' '
   499  08EC  340D               	retlw	13
   500  08ED  3400               	retlw	0
   501  08EE                     STR_6:
   502  08EE  3420               	retlw	32	;' '
   503  08EF  3448               	retlw	72	;'H'
   504  08F0  346F               	retlw	111	;'o'
   505  08F1  344C               	retlw	76	;'L'
   506  08F2  3461               	retlw	97	;'a'
   507  08F3  3420               	retlw	32	;' '
   508  08F4  344A               	retlw	74	;'J'
   509  08F5  346F               	retlw	111	;'o'
   510  08F6  3453               	retlw	83	;'S'
   511  08F7  3465               	retlw	101	;'e'
   512  08F8  3420               	retlw	32	;' '
   513  08F9  3479               	retlw	121	;'y'
   514  08FA  3420               	retlw	32	;' '
   515  08FB  344B               	retlw	75	;'K'
   516  08FC  3475               	retlw	117	;'u'
   517  08FD  3452               	retlw	82	;'R'
   518  08FE  3474               	retlw	116	;'t'
   519  08FF  340D               	retlw	13
   520  0900  340D               	retlw	13
   521  0901  3400               	retlw	0
   522                           
   523                           	psect	cinit
   524  07FC                     start_initialization:	
   525                           ; #config settings
   526                           
   527  07FC                     __initialization:
   528  07FC                     end_of_initialization:	
   529                           ;End of C runtime variable initialization code
   530                           
   531  07FC                     __end_of__initialization:
   532  07FC  0183               	clrf	3
   533  07FD  120A  118A  2EBD   	ljmp	_main	;jump to C main() function
   534                           
   535                           	psect	cstackCOMMON
   536  0070                     __pcstackCOMMON:
   537  0070                     ?_setup:
   538  0070                     ??_setup:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_display:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_main:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_putch:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ??_putch:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     putch@data:	
   554                           ; 1 bytes @ 0x0
   555                           
   556                           
   557                           ; 1 bytes @ 0x0
   558  0070                     	ds	1
   559  0071                     ?_printf:
   560  0071                     printf@f:	
   561                           ; 2 bytes @ 0x1
   562                           
   563                           
   564                           ; 2 bytes @ 0x1
   565  0071                     	ds	2
   566  0073                     ??_printf:
   567                           
   568                           ; 1 bytes @ 0x3
   569  0073                     	ds	3
   570  0076                     printf@ap:
   571                           
   572                           ; 1 bytes @ 0x6
   573  0076                     	ds	1
   574  0077                     printf@c:
   575                           
   576                           ; 1 bytes @ 0x7
   577  0077                     	ds	1
   578  0078                     ??_display:
   579                           
   580                           ; 1 bytes @ 0x8
   581  0078                     	ds	3
   582  007B                     ??_main:
   583                           
   584                           	psect	maintext
   585  06BD                     __pmaintext:	
   586                           ; 1 bytes @ 0xB
   587 ;;
   588 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   589 ;;
   590 ;; *************** function _main *****************
   591 ;; Defined at:
   592 ;;		line 60 in file "Lab10.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : B00/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0
   609 ;;      Totals:         0       0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels required when called:    3
   612 ;; This function calls:
   613 ;;		_display
   614 ;;		_setup
   615 ;; This function is called by:
   616 ;;		Startup code after reset
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _main
   622  06BD                     _main:
   623  06BD                     l819:	
   624                           ;incstack = 0
   625                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   626                           
   627                           
   628                           ;Lab10.c: 61:     setup();
   629  06BD  120A  118A  26F1  120A  118A  	fcall	_setup
   630  06C2                     l821:
   631                           
   632                           ;Lab10.c: 68:     {;Lab10.c: 69:         display();
   633  06C2  120A  118A  2720  120A  118A  	fcall	_display
   634  06C7  2EC2               	goto	l821
   635  06C8  120A  118A  2800   	ljmp	start
   636  06CB                     __end_of_main:
   637                           
   638                           	psect	text1
   639  06F1                     __ptext1:	
   640 ;; *************** function _setup *****************
   641 ;; Defined at:
   642 ;;		line 81 in file "Lab10.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   656 ;;      Params:         0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0
   659 ;;      Totals:         0       0       0       0       0
   660 ;;Total ram usage:        0 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _setup
   671  06F1                     _setup:
   672  06F1                     l695:	
   673                           ;incstack = 0
   674                           ; Regs used in _setup: [wreg+status,2]
   675                           
   676                           
   677                           ;Lab10.c: 83:     ANSEL = 0X00;
   678  06F1  1683               	bsf	3,5	;RP0=1, select bank3
   679  06F2  1703               	bsf	3,6	;RP1=1, select bank3
   680  06F3  0188               	clrf	8	;volatile
   681                           
   682                           ;Lab10.c: 84:     ANSELH = 0X00;
   683  06F4  0189               	clrf	9	;volatile
   684                           
   685                           ;Lab10.c: 86:     TRISA = 0X00;
   686  06F5  1683               	bsf	3,5	;RP0=1, select bank1
   687  06F6  1303               	bcf	3,6	;RP1=0, select bank1
   688  06F7  0185               	clrf	5	;volatile
   689                           
   690                           ;Lab10.c: 87:     TRISB = 0X00;
   691  06F8  0186               	clrf	6	;volatile
   692                           
   693                           ;Lab10.c: 89:     PORTA = 0x00;
   694  06F9  1283               	bcf	3,5	;RP0=0, select bank0
   695  06FA  1303               	bcf	3,6	;RP1=0, select bank0
   696  06FB  0185               	clrf	5	;volatile
   697                           
   698                           ;Lab10.c: 90:     PORTB = 0x00;
   699  06FC  0186               	clrf	6	;volatile
   700  06FD                     l697:
   701                           
   702                           ;Lab10.c: 92:     OSCCONbits.IRCF2 = 1;
   703  06FD  1683               	bsf	3,5	;RP0=1, select bank1
   704  06FE  1303               	bcf	3,6	;RP1=0, select bank1
   705  06FF  170F               	bsf	15,6	;volatile
   706  0700                     l699:
   707                           
   708                           ;Lab10.c: 93:     OSCCONbits.IRCF1 = 1;
   709  0700  168F               	bsf	15,5	;volatile
   710  0701                     l701:
   711                           
   712                           ;Lab10.c: 94:     OSCCONbits.IRCF0 = 1;
   713  0701  160F               	bsf	15,4	;volatile
   714  0702                     l703:
   715                           
   716                           ;Lab10.c: 95:     OSCCONbits.SCS = 1;
   717  0702  140F               	bsf	15,0	;volatile
   718  0703                     l705:
   719                           
   720                           ;Lab10.c: 98:     INTCONbits.GIE = 1;
   721  0703  178B               	bsf	11,7	;volatile
   722  0704                     l707:
   723                           
   724                           ;Lab10.c: 99:     INTCONbits.PEIE = 1;
   725  0704  170B               	bsf	11,6	;volatile
   726  0705                     l709:
   727                           
   728                           ;Lab10.c: 100:     PIE1bits.RCIE = 1;
   729  0705  168C               	bsf	12,5	;volatile
   730  0706                     l711:
   731                           
   732                           ;Lab10.c: 101:     PIE1bits.TXIE = 1;
   733  0706  160C               	bsf	12,4	;volatile
   734  0707                     l713:
   735                           
   736                           ;Lab10.c: 102:     PIR1bits.RCIF = 0;
   737  0707  1283               	bcf	3,5	;RP0=0, select bank0
   738  0708  1303               	bcf	3,6	;RP1=0, select bank0
   739  0709  128C               	bcf	12,5	;volatile
   740  070A                     l715:
   741                           
   742                           ;Lab10.c: 103:     PIR1bits.TXIF = 0;
   743  070A  120C               	bcf	12,4	;volatile
   744  070B                     l717:
   745                           
   746                           ;Lab10.c: 106:     TXSTAbits.SYNC = 0;
   747  070B  1683               	bsf	3,5	;RP0=1, select bank1
   748  070C  1303               	bcf	3,6	;RP1=0, select bank1
   749  070D  1218               	bcf	24,4	;volatile
   750  070E                     l719:
   751                           
   752                           ;Lab10.c: 107:     TXSTAbits.BRGH = 1;
   753  070E  1518               	bsf	24,2	;volatile
   754  070F                     l721:
   755                           
   756                           ;Lab10.c: 109:     BAUDCTLbits.BRG16 = 1;
   757  070F  1683               	bsf	3,5	;RP0=1, select bank3
   758  0710  1703               	bsf	3,6	;RP1=1, select bank3
   759  0711  1587               	bsf	7,3	;volatile
   760  0712                     l723:
   761                           
   762                           ;Lab10.c: 111:     SPBRG = 207;
   763  0712  30CF               	movlw	207
   764  0713  1683               	bsf	3,5	;RP0=1, select bank1
   765  0714  1303               	bcf	3,6	;RP1=0, select bank1
   766  0715  0099               	movwf	25	;volatile
   767  0716                     l725:
   768                           
   769                           ;Lab10.c: 112:     SPBRGH = 0;
   770  0716  019A               	clrf	26	;volatile
   771  0717                     l727:
   772                           
   773                           ;Lab10.c: 114:     RCSTAbits.SPEN = 1;
   774  0717  1283               	bcf	3,5	;RP0=0, select bank0
   775  0718  1303               	bcf	3,6	;RP1=0, select bank0
   776  0719  1798               	bsf	24,7	;volatile
   777  071A                     l729:
   778                           
   779                           ;Lab10.c: 115:     RCSTAbits.RX9 = 0;
   780  071A  1318               	bcf	24,6	;volatile
   781  071B                     l731:
   782                           
   783                           ;Lab10.c: 116:     RCSTAbits.CREN = 1;
   784  071B  1618               	bsf	24,4	;volatile
   785  071C                     l733:
   786                           
   787                           ;Lab10.c: 118:     TXSTAbits.TXEN = 1;
   788  071C  1683               	bsf	3,5	;RP0=1, select bank1
   789  071D  1303               	bcf	3,6	;RP1=0, select bank1
   790  071E  1698               	bsf	24,5	;volatile
   791  071F                     l57:
   792  071F  0008               	return
   793  0720                     __end_of_setup:
   794                           
   795                           	psect	text2
   796  0720                     __ptext2:	
   797 ;; *************** function _display *****************
   798 ;; Defined at:
   799 ;;		line 133 in file "Lab10.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0
   815 ;;      Temps:          3       0       0       0       0
   816 ;;      Totals:         3       0       0       0       0
   817 ;;Total ram usage:        3 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    2
   820 ;; This function calls:
   821 ;;		_printf
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _display
   829  0720                     _display:
   830  0720                     l783:	
   831                           ;incstack = 0
   832                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   833                           
   834                           
   835                           ;Lab10.c: 134:     _delay((unsigned long)((100)*(8000000/4000.0)));
   836  0720  3002               	movlw	2
   837  0721  00FA               	movwf	??_display+2
   838  0722  3004               	movlw	4
   839  0723  00F9               	movwf	??_display+1
   840  0724  30BA               	movlw	186
   841  0725  00F8               	movwf	??_display
   842  0726                     u167:
   843  0726  0BF8               	decfsz	??_display,f
   844  0727  2F26               	goto	u167
   845  0728  0BF9               	decfsz	??_display+1,f
   846  0729  2F26               	goto	u167
   847  072A  0BFA               	decfsz	??_display+2,f
   848  072B  2F26               	goto	u167
   849  072C  0000               	nop
   850  072D                     l785:
   851                           
   852                           ;Lab10.c: 135:     printf("\rQue accion desea ejecutar?: \r");
   853  072D  3081               	movlw	low (STR_1| (0+32768))
   854  072E  00F1               	movwf	printf@f
   855  072F  3088               	movlw	high (STR_1| (0+32768))
   856  0730  00F2               	movwf	printf@f+1
   857  0731  120A  118A  26CB  120A  118A  	fcall	_printf
   858  0736                     l787:
   859                           
   860                           ;Lab10.c: 136:     _delay((unsigned long)((100)*(8000000/4000.0)));
   861  0736  3002               	movlw	2
   862  0737  00FA               	movwf	??_display+2
   863  0738  3004               	movlw	4
   864  0739  00F9               	movwf	??_display+1
   865  073A  30BA               	movlw	186
   866  073B  00F8               	movwf	??_display
   867  073C                     u177:
   868  073C  0BF8               	decfsz	??_display,f
   869  073D  2F3C               	goto	u177
   870  073E  0BF9               	decfsz	??_display+1,f
   871  073F  2F3C               	goto	u177
   872  0740  0BFA               	decfsz	??_display+2,f
   873  0741  2F3C               	goto	u177
   874  0742  0000               	nop
   875                           
   876                           ;Lab10.c: 137:     printf("    (1) Desplegar cadena de caracteres \r");
   877  0743  3058               	movlw	low (STR_2| (0+32768))
   878  0744  00F1               	movwf	printf@f
   879  0745  3088               	movlw	high (STR_2| (0+32768))
   880  0746  00F2               	movwf	printf@f+1
   881  0747  120A  118A  26CB  120A  118A  	fcall	_printf
   882  074C                     l789:
   883                           
   884                           ;Lab10.c: 138:     _delay((unsigned long)((100)*(8000000/4000.0)));
   885  074C  3002               	movlw	2
   886  074D  00FA               	movwf	??_display+2
   887  074E  3004               	movlw	4
   888  074F  00F9               	movwf	??_display+1
   889  0750  30BA               	movlw	186
   890  0751  00F8               	movwf	??_display
   891  0752                     u187:
   892  0752  0BF8               	decfsz	??_display,f
   893  0753  2F52               	goto	u187
   894  0754  0BF9               	decfsz	??_display+1,f
   895  0755  2F52               	goto	u187
   896  0756  0BFA               	decfsz	??_display+2,f
   897  0757  2F52               	goto	u187
   898  0758  0000               	nop
   899  0759                     l791:
   900                           
   901                           ;Lab10.c: 139:     printf("    (2) Cambiar PORTA \r");
   902  0759  30BE               	movlw	low (STR_3| (0+32768))
   903  075A  00F1               	movwf	printf@f
   904  075B  3088               	movlw	high (STR_3| (0+32768))
   905  075C  00F2               	movwf	printf@f+1
   906  075D  120A  118A  26CB  120A  118A  	fcall	_printf
   907                           
   908                           ;Lab10.c: 140:     _delay((unsigned long)((100)*(8000000/4000.0)));
   909  0762  3002               	movlw	2
   910  0763  00FA               	movwf	??_display+2
   911  0764  3004               	movlw	4
   912  0765  00F9               	movwf	??_display+1
   913  0766  30BA               	movlw	186
   914  0767  00F8               	movwf	??_display
   915  0768                     u197:
   916  0768  0BF8               	decfsz	??_display,f
   917  0769  2F68               	goto	u197
   918  076A  0BF9               	decfsz	??_display+1,f
   919  076B  2F68               	goto	u197
   920  076C  0BFA               	decfsz	??_display+2,f
   921  076D  2F68               	goto	u197
   922  076E  0000               	nop
   923  076F                     l793:
   924                           
   925                           ;Lab10.c: 141:     printf("    (3) Cambiar PORTB \r");
   926  076F  30D6               	movlw	low (STR_4| (0+32768))
   927  0770  00F1               	movwf	printf@f
   928  0771  3088               	movlw	high (STR_4| (0+32768))
   929  0772  00F2               	movwf	printf@f+1
   930  0773  120A  118A  26CB  120A  118A  	fcall	_printf
   931  0778                     l66:	
   932                           ;Lab10.c: 143:     while (RCIF == 0);
   933                           
   934  0778  1283               	bcf	3,5	;RP0=0, select bank0
   935  0779  1303               	bcf	3,6	;RP1=0, select bank0
   936  077A  1E8C               	btfss	12,5	;volatile
   937  077B  2F7D               	goto	u101
   938  077C  2F7E               	goto	u100
   939  077D                     u101:
   940  077D  2F78               	goto	l66
   941  077E                     u100:
   942  077E                     l795:
   943                           
   944                           ;Lab10.c: 145:     if (RCREG == '1') {
   945  077E  3031               	movlw	49
   946  077F  061A               	xorwf	26,w	;volatile
   947  0780  1D03               	btfss	3,2
   948  0781  2F83               	goto	u111
   949  0782  2F84               	goto	u110
   950  0783                     u111:
   951  0783  2FB1               	goto	l803
   952  0784                     u110:
   953  0784                     l797:
   954                           
   955                           ;Lab10.c: 146:         _delay((unsigned long)((500)*(8000000/4000.0)));
   956  0784  3006               	movlw	6
   957  0785  00FA               	movwf	??_display+2
   958  0786  3013               	movlw	19
   959  0787  00F9               	movwf	??_display+1
   960  0788  30AD               	movlw	173
   961  0789  00F8               	movwf	??_display
   962  078A                     u207:
   963  078A  0BF8               	decfsz	??_display,f
   964  078B  2F8A               	goto	u207
   965  078C  0BF9               	decfsz	??_display+1,f
   966  078D  2F8A               	goto	u207
   967  078E  0BFA               	decfsz	??_display+2,f
   968  078F  2F8A               	goto	u207
   969  0790  2F91               	nop2
   970  0791                     l799:
   971                           
   972                           ;Lab10.c: 147:         printf("\r\rLa cadena de caracteres es:");
   973  0791  30A0               	movlw	low (STR_5| (0+32768))
   974  0792  00F1               	movwf	printf@f
   975  0793  3088               	movlw	high (STR_5| (0+32768))
   976  0794  00F2               	movwf	printf@f+1
   977  0795  120A  118A  26CB  120A  118A  	fcall	_printf
   978  079A                     l801:
   979                           
   980                           ;Lab10.c: 148:         _delay((unsigned long)((500)*(8000000/4000.0)));
   981  079A  3006               	movlw	6
   982  079B  00FA               	movwf	??_display+2
   983  079C  3013               	movlw	19
   984  079D  00F9               	movwf	??_display+1
   985  079E  30AD               	movlw	173
   986  079F  00F8               	movwf	??_display
   987  07A0                     u217:
   988  07A0  0BF8               	decfsz	??_display,f
   989  07A1  2FA0               	goto	u217
   990  07A2  0BF9               	decfsz	??_display+1,f
   991  07A3  2FA0               	goto	u217
   992  07A4  0BFA               	decfsz	??_display+2,f
   993  07A5  2FA0               	goto	u217
   994  07A6  2FA7               	nop2
   995                           
   996                           ;Lab10.c: 149:         printf(" HoLa JoSe y KuRt\r\r");
   997  07A7  30EE               	movlw	low (STR_6| (0+32768))
   998  07A8  00F1               	movwf	printf@f
   999  07A9  3088               	movlw	high (STR_6| (0+32768))
  1000  07AA  00F2               	movwf	printf@f+1
  1001  07AB  120A  118A  26CB  120A  118A  	fcall	_printf
  1002                           
  1003                           ;Lab10.c: 150:     }
  1004  07B0  2FFB               	goto	l81
  1005  07B1                     l803:
  1006  07B1  3032               	movlw	50
  1007  07B2  061A               	xorwf	26,w	;volatile
  1008  07B3  1D03               	btfss	3,2
  1009  07B4  2FB6               	goto	u121
  1010  07B5  2FB7               	goto	u120
  1011  07B6                     u121:
  1012  07B6  2FD6               	goto	l811
  1013  07B7                     u120:
  1014  07B7                     l805:
  1015                           
  1016                           ;Lab10.c: 153:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1017  07B7  3006               	movlw	6
  1018  07B8  00FA               	movwf	??_display+2
  1019  07B9  3013               	movlw	19
  1020  07BA  00F9               	movwf	??_display+1
  1021  07BB  30AD               	movlw	173
  1022  07BC  00F8               	movwf	??_display
  1023  07BD                     u227:
  1024  07BD  0BF8               	decfsz	??_display,f
  1025  07BE  2FBD               	goto	u227
  1026  07BF  0BF9               	decfsz	??_display+1,f
  1027  07C0  2FBD               	goto	u227
  1028  07C1  0BFA               	decfsz	??_display+2,f
  1029  07C2  2FBD               	goto	u227
  1030  07C3  2FC4               	nop2
  1031  07C4                     l807:
  1032                           
  1033                           ;Lab10.c: 154:         printf("\r\rPresione el caracter a colocar en PORTA\r\r");
  1034  07C4  3000               	movlw	low (STR_7| (0+32768))
  1035  07C5  00F1               	movwf	printf@f
  1036  07C6  3088               	movlw	high (STR_7| (0+32768))
  1037  07C7  00F2               	movwf	printf@f+1
  1038  07C8  120A  118A  26CB  120A  118A  	fcall	_printf
  1039  07CD                     l72:	
  1040                           ;Lab10.c: 155:         while (RCIF == 0);
  1041                           
  1042  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1043  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1044  07CF  1E8C               	btfss	12,5	;volatile
  1045  07D0  2FD2               	goto	u131
  1046  07D1  2FD3               	goto	u130
  1047  07D2                     u131:
  1048  07D2  2FCD               	goto	l72
  1049  07D3                     u130:
  1050  07D3                     l809:
  1051                           
  1052                           ;Lab10.c: 157:         PORTA = RCREG;
  1053  07D3  081A               	movf	26,w	;volatile
  1054  07D4  0085               	movwf	5	;volatile
  1055                           
  1056                           ;Lab10.c: 158:     }
  1057  07D5  2FFB               	goto	l81
  1058  07D6                     l811:
  1059  07D6  3033               	movlw	51
  1060  07D7  061A               	xorwf	26,w	;volatile
  1061  07D8  1D03               	btfss	3,2
  1062  07D9  2FDB               	goto	u141
  1063  07DA  2FDC               	goto	u140
  1064  07DB                     u141:
  1065  07DB  2FFB               	goto	l75
  1066  07DC                     u140:
  1067  07DC                     l813:
  1068                           
  1069                           ;Lab10.c: 161:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1070  07DC  3006               	movlw	6
  1071  07DD  00FA               	movwf	??_display+2
  1072  07DE  3013               	movlw	19
  1073  07DF  00F9               	movwf	??_display+1
  1074  07E0  30AD               	movlw	173
  1075  07E1  00F8               	movwf	??_display
  1076  07E2                     u237:
  1077  07E2  0BF8               	decfsz	??_display,f
  1078  07E3  2FE2               	goto	u237
  1079  07E4  0BF9               	decfsz	??_display+1,f
  1080  07E5  2FE2               	goto	u237
  1081  07E6  0BFA               	decfsz	??_display+2,f
  1082  07E7  2FE2               	goto	u237
  1083  07E8  2FE9               	nop2
  1084  07E9                     l815:
  1085                           
  1086                           ;Lab10.c: 162:         printf("\r\rPresione el caracter a colocar en PORTB\r\r");
  1087  07E9  302C               	movlw	low (STR_8| (0+32768))
  1088  07EA  00F1               	movwf	printf@f
  1089  07EB  3088               	movlw	high (STR_8| (0+32768))
  1090  07EC  00F2               	movwf	printf@f+1
  1091  07ED  120A  118A  26CB  120A  118A  	fcall	_printf
  1092  07F2                     l77:	
  1093                           ;Lab10.c: 163:         while (RCIF == 0);
  1094                           
  1095  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  1096  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  1097  07F4  1E8C               	btfss	12,5	;volatile
  1098  07F5  2FF7               	goto	u151
  1099  07F6  2FF8               	goto	u150
  1100  07F7                     u151:
  1101  07F7  2FF2               	goto	l77
  1102  07F8                     u150:
  1103  07F8                     l817:
  1104                           
  1105                           ;Lab10.c: 165:         PORTB = RCREG;
  1106  07F8  081A               	movf	26,w	;volatile
  1107  07F9  0086               	movwf	6	;volatile
  1108                           
  1109                           ;Lab10.c: 166:     }
  1110  07FA  2FFB               	goto	l81
  1111  07FB                     l75:
  1112  07FB                     l81:
  1113  07FB  0008               	return
  1114  07FC                     __end_of_display:
  1115                           
  1116                           	psect	text3
  1117  06CB                     __ptext3:	
  1118 ;; *************** function _printf *****************
  1119 ;; Defined at:
  1120 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  f               2    1[COMMON] PTR const unsigned char 
  1123 ;;		 -> STR_8(44), STR_7(44), STR_6(20), STR_5(30), 
  1124 ;;		 -> STR_4(24), STR_3(24), STR_2(41), STR_1(31), 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  tmpval          4    0        struct .
  1127 ;;  cp              2    0        PTR const unsigned char 
  1128 ;;  len             2    0        unsigned int 
  1129 ;;  val             2    0        unsigned int 
  1130 ;;  c               1    7[COMMON] unsigned char 
  1131 ;;  ap              1    6[COMMON] PTR void [1]
  1132 ;;		 -> ?_printf(2), 
  1133 ;;  flag            1    0        unsigned char 
  1134 ;;  prec            1    0        char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  2    1[COMMON] int 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         2       0       0       0       0
  1145 ;;      Locals:         2       0       0       0       0
  1146 ;;      Temps:          3       0       0       0       0
  1147 ;;      Totals:         7       0       0       0       0
  1148 ;;Total ram usage:        7 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    1
  1151 ;; This function calls:
  1152 ;;		_putch
  1153 ;; This function is called by:
  1154 ;;		_display
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function _printf
  1160  06CB                     _printf:
  1161  06CB                     l777:	
  1162                           ;incstack = 0
  1163                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1164                           
  1165                           
  1166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1167  06CB  3073               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1168  06CC  00F3               	movwf	??_printf
  1169  06CD  0873               	movf	??_printf,w
  1170  06CE  00F6               	movwf	printf@ap
  1171                           
  1172                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1173  06CF  2ED6               	goto	l781
  1174  06D0                     l779:
  1175                           
  1176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1177  06D0  0877               	movf	printf@c,w
  1178  06D1  120A  118A  26B3  120A  118A  	fcall	_putch
  1179  06D6                     l781:	
  1180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1181                           
  1182                           
  1183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1184  06D6  0872               	movf	printf@f+1,w
  1185  06D7  00F4               	movwf	??_printf+1
  1186  06D8  0871               	movf	printf@f,w
  1187  06D9  00F3               	movwf	??_printf
  1188  06DA  0AF1               	incf	printf@f,f
  1189  06DB  1903               	skipnz
  1190  06DC  0AF2               	incf	printf@f+1,f
  1191  06DD  0874               	movf	??_printf+1,w
  1192  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1193  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1194  06E0  00FF               	movwf	btemp+1
  1195  06E1  0873               	movf	??_printf,w
  1196  06E2  0084               	movwf	4
  1197  06E3  120A  118A  2003  120A  118A  	fcall	stringtab
  1198  06E8  00F5               	movwf	??_printf+2
  1199  06E9  0875               	movf	??_printf+2,w
  1200  06EA  00F7               	movwf	printf@c
  1201  06EB  0877               	movf	printf@c,w
  1202  06EC  1D03               	btfss	3,2
  1203  06ED  2EEF               	goto	u91
  1204  06EE  2EF0               	goto	u90
  1205  06EF                     u91:
  1206  06EF  2ED0               	goto	l779
  1207  06F0                     u90:
  1208  06F0                     l173:
  1209  06F0  0008               	return
  1210  06F1                     __end_of_printf:
  1211                           
  1212                           	psect	text4
  1213  06B3                     __ptext4:	
  1214 ;; *************** function _putch *****************
  1215 ;; Defined at:
  1216 ;;		line 127 in file "Lab10.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  data            1    wreg     unsigned char 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  data            1    0[COMMON] unsigned char 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       0       0       0       0
  1231 ;;      Locals:         1       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0
  1233 ;;      Totals:         1       0       0       0       0
  1234 ;;Total ram usage:        1 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_printf
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           
  1244                           ;psect for function _putch
  1245  06B3                     _putch:
  1246                           
  1247                           ;incstack = 0
  1248                           ; Regs used in _putch: [wreg]
  1249                           ;putch@data stored from wreg
  1250  06B3  00F0               	movwf	putch@data
  1251  06B4                     l683:
  1252  06B4                     l60:	
  1253                           ;Lab10.c: 128:     while (TXIF == 0);
  1254                           
  1255  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1256  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1257  06B6  1E0C               	btfss	12,4	;volatile
  1258  06B7  2EB9               	goto	u11
  1259  06B8  2EBA               	goto	u10
  1260  06B9                     u11:
  1261  06B9  2EB4               	goto	l60
  1262  06BA                     u10:
  1263  06BA                     l685:
  1264                           
  1265                           ;Lab10.c: 129:     TXREG = data;
  1266  06BA  0870               	movf	putch@data,w
  1267  06BB  0099               	movwf	25	;volatile
  1268  06BC                     l63:
  1269  06BC  0008               	return
  1270  06BD                     __end_of_putch:
  1271  007E                     btemp	set	126	;btemp
  1272  007E                     wtemp0	set	126
  1273                           
  1274                           	psect	config
  1275                           
  1276                           ;Config register CONFIG1 @ 0x2007
  1277                           ;	Oscillator Selection bits
  1278                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1279                           ;	Watchdog Timer Enable bit
  1280                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1281                           ;	Power-up Timer Enable bit
  1282                           ;	PWRTE = ON, PWRT enabled
  1283                           ;	RE3/MCLR pin function select bit
  1284                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1285                           ;	Code Protection bit
  1286                           ;	CP = OFF, Program memory code protection is disabled
  1287                           ;	Data Code Protection bit
  1288                           ;	CPD = OFF, Data memory code protection is disabled
  1289                           ;	Brown Out Reset Selection bits
  1290                           ;	BOREN = OFF, BOR disabled
  1291                           ;	Internal External Switchover bit
  1292                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1293                           ;	Fail-Safe Clock Monitor Enabled bit
  1294                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1295                           ;	Low Voltage Programming Enable bit
  1296                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1297                           ;	In-Circuit Debugger Mode bit
  1298                           ;	DEBUG = 0x1, unprogrammed default
  1299  2007                     	org	8199
  1300  2007  30C4               	dw	12484
  1301                           
  1302                           ;Config register CONFIG2 @ 0x2008
  1303                           ;	Brown-out Reset Selection bit
  1304                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1305                           ;	Flash Program Memory Self Write Enable bits
  1306                           ;	WRT = OFF, Write protection off
  1307  2008                     	org	8200
  1308  2008  3FFF               	dw	16383

Data Sizes:
    Strings     258
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_8(CODE[44]), STR_7(CODE[44]), STR_6(CODE[20]), STR_5(CODE[30]), 
		 -> STR_4(CODE[24]), STR_3(CODE[24]), STR_2(CODE[41]), STR_1(CODE[31]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_display
    _display->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     669
                            _display
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              3     3      0     669
                                              8 COMMON     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     669
                                              1 COMMON     7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     _printf
       _putch
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat May 08 21:49:37 2021

                      pc 0002                       l60 06B4                       l63 06BC  
                     l72 07CD                       l81 07FB                       l57 071F  
                     l66 0778                       l75 07FB                       l77 07F2  
                     u10 06BA                       u11 06B9                       u90 06F0  
                     u91 06EF                       fsr 0004                      l173 06F0  
                    l701 0701                      l711 0706                      l703 0702  
                    l801 079A                      l721 070F                      l713 0707  
                    l705 0703                      l811 07D6                      l803 07B1  
                    l731 071B                      l723 0712                      l715 070A  
                    l707 0704                      l813 07DC                      l805 07B7  
                    l733 071C                      l725 0716                      l717 070B  
                    l709 0705                      l821 06C2                      l815 07E9  
                    l807 07C4                      l727 0717                      l719 070E  
                    l817 07F8                      l809 07D3                      l729 071A  
                    l683 06B4                      l819 06BD                      l685 06BA  
                    l781 06D6                      l791 0759                      l783 0720  
                    l695 06F1                      l777 06CB                      l793 076F  
                    l785 072D                      l697 06FD                      l779 06D0  
                    l795 077E                      l787 0736                      l699 0700  
                    l797 0784                      l789 074C                      l799 0791  
                    u100 077E                      u101 077D                      u110 0784  
                    u111 0783                      u120 07B7                      u121 07B6  
                    u130 07D3                      u131 07D2                      u140 07DC  
                    u141 07DB                      u150 07F8                      u151 07F7  
                    u207 078A                      u217 07A0                      u227 07BD  
                    u237 07E2                      u167 0726                      u177 073C  
                    u187 0752                      u197 0768                      fsr0 0004  
                    indf 0000                     STR_1 0881                     STR_2 0858  
                   STR_3 08BE                     STR_4 08D6                     STR_5 08A0  
                   STR_6 08EE                     STR_7 0800                     STR_8 082C  
                   _RCIF 0065                     _TXIF 0064                     _main 06BD  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019          __end_of_display 07FC  
                  _setup 06F1                    _putch 06B3                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 06CB                   ??_main 007B                   ?_setup 0070  
                 ?_putch 0070                   _ANSELH 0189                   _SPBRGH 009A  
                 _printf 06CB                ??_display 0078  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 0720            __end_of_putch 06BD  
                ??_setup 0070                  ??_putch 0070               __pmaintext 06BD  
                ?_printf 0071               __stringtab 0003                  __ptext1 06F1  
                __ptext2 0720                  __ptext3 06CB                  __ptext4 06B3  
        __size_of_printf 0026                  _display 0720     end_of_initialization 07FC  
              _RCSTAbits 0018                  printf@c 0077                  printf@f 0071  
           __pstringtext 0800                _TXSTAbits 0098              _BAUDCTLbits 0187  
         __end_of_printf 06F1      start_initialization 07FC                 ??_printf 0073  
              ___latbits 0002                __pstrings 0003                 ?_display 0070  
         __size_of_setup 002F           __size_of_putch 000A                 _PIE1bits 008C  
               _PIR1bits 000C              __stringbase 0015       __end_of__stringtab 0015  
       __size_of_display 00DC            __size_of_main 000E                putch@data 0070  
             _INTCONbits 000B                stringcode 000D               _OSCCONbits 008F  
               printf@ap 0076                 stringtab 0003  
